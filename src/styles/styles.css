@import url("reset.css");
@import url("var.css");
@import url("animations.css");
@import url("checkbox.css");

*{
    box-sizing: border-box;
}

#content {
    min-height: 100vh;
    color: var(--color);
    background-color: var(--background-color);
    font-family: var(--font-family);
    color-scheme: var(--color-scheme);

    /* Layout */
    /* display: flex;
    flex-direction: column;
    justify-content: space-between; */
}

.flip {
    transform: rotate(180deg); 
    
    &:is(svg, i):hover{
        transform: rotate(180deg) scale(120%); 
    }
}

svg, i {
    cursor: pointer;
    
    &:hover {
        transform: scale(120%);
    }
}

.header {
    display: flex;
    justify-content: space-evenly;
    gap: var(--gap);
    padding: var(--padding-top-bottom) var(--padding-left-right);
    position: sticky;
    top: 0;
    box-shadow: var(--shadow-color) 0px 3.5px 4.5px 4.5px;

    background-color: var(--header-color);
    backdrop-filter: blur(10px);

    margin-bottom: var(--padding-top-bottom);

    z-index: 10;

    & > .logo {
        flex: 1;
        font-size: var(--title-font-size);
    }

    & ul {
        display: flex;
        justify-content: space-evenly;
        gap: calc(2 * var(--gap));
    }
}

li, .logo {
    display: flex;
    align-items: center;
    gap: var(--gap);
}

dialog, input {
    /* font and background */
    color: var(--color);
    background-color: var(--shadow-color);
    font-family: var(--font-family);

    &::backdrop {
        background-color: var(--shadow-color);
    }
}

#sidebar-dialog {

    position: fixed;
    height: 100vh;
    margin: 0;
    padding: 0;
    top: calc(2 * var(--padding-top-bottom) + var(--title-font-size) + var(--header-shadow-width));
    border: none;
    outline: none;
    
    /* transition */
    animation: slide-out 0.5s ease-out;

    &[open] {
        animation: slide-in 0.5s ease-out;
    }

    & > nav {
        width: 100%;
    }

    & ul {
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
    
        & > li {
            padding: calc(0.5 * var(--gap)) var(--padding-left-right);
            cursor: pointer;

            &:hover {
                background-color: var(--background-color);
            }
        }
    }
}

main {
    padding: var(--padding-top-bottom) 0;
}

.page-container, .todo-item-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--gap);
    width: 100%;
}

.page-container > .heading {
    font-size: 1.5rem;
    display: flex;
    gap: var(--gap);
    align-items: center;
    justify-content: flex-start;
    width: min(1000px, 98%);
    padding: var(--padding-top-bottom) 0;
    border-bottom: 4px solid var(--shadow-color);
    
    & > svg {
        cursor: auto;

        &:hover {
            transform: scale(1);
        }
    }
}

.todo-item-container {
    flex-direction: column-reverse;

    &:empty {
        display: none;
    }
}

.item-adder {
    display: flex;
    align-items: center;
    cursor: pointer;
    gap: var(--gap);
}

.todo-item {
    /* display and grid view */
    display: grid;
    grid-template-columns: min-content repeat(3, 1fr);
    /* grid-template-rows:  repeat(2, 1fr); */

    /* padding and width for better view */
    padding: var(--padding-top-bottom) var(--padding-left-right);
    width: min(1000px, 98%);
    border-radius: 10px;
    overflow: hidden;
    background-color: var(--shadow-color);

    & > .todo-item-checkbox {
        grid-column: 1 / 2;
        grid-row: 1 / 3;
        height: 100%;
        display: flex;
        align-items: center;
    }

    & > .todo-item-title {
        grid-column: 2 / 4;
        grid-row: 1 / 2;
    }
    
    & > .todo-item-description {
        grid-column: 2 / 4;
        grid-row: 2 / 3;
    } 
    
    & > .todo-item-icon-set{
        grid-column: 4 / 5;
        grid-row: 1 / 2;
        
        & > ul {
            display: flex;
            justify-content: end;
            gap: var(--gap);
        }
    }

    & > .todo-item-hashtag {
        grid-column: 4 / 5;
        grid-row: 2 / 3;
        cursor: pointer;

        &:not(:empty):before {
            content: '#';
        }

        &:hover {
            text-decoration: underline;
        }
    }
    
    & > .todo-item-right {
        text-align: end;
    }

    & [class*="trash"] {
        color: red;
    }

    /* animations */
    &.add {
        animation: pop-in 0.3s ease-out;
    }
    
    &.remove {
        animation: pop-out 0.3s ease-out;
    }

    
}

div.text-container {
    width: 100%;
    text-wrap: nowrap;
    overflow: hidden !important;
    white-space: nowrap;
    text-overflow: ellipsis;
}

dialog.modal-form-container {
    border-radius: 10px;
}

form.modal-form {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: max-content max-content;
    gap: var(--gap);
    justify-content: center;
    max-width: 400px;

    & > .modal-form-content {
        grid-column: 1 / 3;
        grid-row: 1 / 2;

        & > div {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin: var(--gap);
        }
    }

    & > button {
        padding: 0.3rem 1rem;
        border-radius: 10px;
        font-size: 1.1rem;
        cursor: pointer;
    
        /* &[class*="cancel"] {
            background-color: red;
            color: white;
        } */

        &[class*="submit"] {
            background-color: limegreen;
            color: white;
        }
    }
}

input {
    font-size: 1.1rem;
    color: var(--color);
    background-color: var(--background-color);
    outline: none;
    border-radius: 5px;
    border: 1px solid currentColor;
}

.text-input {
    position: relative;
    height: var(--text-input-height);
    display: flex;
    justify-content: center !important;
    align-items: center !important;

    & > label {
        position: absolute;
        cursor: text;

        &:has(~ input:focus, ~ input:valid) {
            top: -0.6rem;
            left: 1rem;
            background-color: limegreen;
            color: white;
            padding: 0.2rem 0.4rem;
        }
    }

    & > input {
        align-self: flex-end;
        height: 100%;
        width: 100%;
        outline: none;
        font-size: 1.1rem;
        padding: 0 1rem;

        &:is(:focus, :valid){
            border: 2px solid limegreen;
        }

    }
}

div.date-priority-project-cont {
    display: grid !important;
    gap: var(--gap);
    text-align: center;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;

    & > div:has(input[type="date"]) {
        grid-column: 1 / 3;
        grid-row: 1 / 2;
        color-scheme: var(--color-scheme);
        color: var(--color);
        width: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        height: calc(var(--text-input-height)*0.6);
        gap: var(--gap);

        & > input[type="date"] {
            width: 100%;
            height: 100%;
            text-align: center;
            padding: 0.3rem 0.1rem;
            cursor: pointer;
            background-color: var(--background-color);

            &.selected {
                background-color: limegreen;
                color: white;
            }        
        }
    }

    & > select {
        font-size: 1.05rem;
        text-align: center;
        background-color: var(--background-color);
        color: var(--color);
        border: 1px solid currentColor;
        border-radius: 5px;
        outline: 0;
        padding: 0.3rem 0.1rem;
        width: 100%;

        & > option {
            background-color: var(--background-color);
            color: var(--color);
        }

        &:valid {
            background-color: limegreen;
            color: white;
        }
    }
}
