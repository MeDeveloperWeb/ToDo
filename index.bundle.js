/*! For license information please see index.bundle.js.LICENSE.txt */
(()=>{var e={439:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var o=t(537),r=t.n(o),i=t(645),l=t.n(i)()(r());l.push([e.id,"@keyframes slide-in {\n    0% {\n        transform: translateX(-100%);\n    }\n    100% {\n        transform: translateX(0%);\n    }\n}\n\n@keyframes slide-out {\n    0% {\n        transform: translateX(0%);\n        display: block;\n    }\n    100% {\n        transform: translateX(-100%);\n        display: none;\n    }\n}\n\n@keyframes pop-in {\n    0% {\n        transform: scale(0);\n        opacity: 0;\n    }\n    100% {\n        transform: scale(1);\n        opacity: 100%;\n    }\n}\n\n@keyframes pop-out {\n    0% {\n        transform: scale(1);\n        opacity: 100%;\n        display: block;\n    }\n    100% {\n        transform: scale(0);\n        opacity: 0;\n        display: none;\n    }\n}","",{version:3,sources:["webpack://./src/styles/animations.css"],names:[],mappings:"AAAA;IACI;QACI,4BAA4B;IAChC;IACA;QACI,yBAAyB;IAC7B;AACJ;;AAEA;IACI;QACI,yBAAyB;QACzB,cAAc;IAClB;IACA;QACI,4BAA4B;QAC5B,aAAa;IACjB;AACJ;;AAEA;IACI;QACI,mBAAmB;QACnB,UAAU;IACd;IACA;QACI,mBAAmB;QACnB,aAAa;IACjB;AACJ;;AAEA;IACI;QACI,mBAAmB;QACnB,aAAa;QACb,cAAc;IAClB;IACA;QACI,mBAAmB;QACnB,UAAU;QACV,aAAa;IACjB;AACJ",sourcesContent:["@keyframes slide-in {\n    0% {\n        transform: translateX(-100%);\n    }\n    100% {\n        transform: translateX(0%);\n    }\n}\n\n@keyframes slide-out {\n    0% {\n        transform: translateX(0%);\n        display: block;\n    }\n    100% {\n        transform: translateX(-100%);\n        display: none;\n    }\n}\n\n@keyframes pop-in {\n    0% {\n        transform: scale(0);\n        opacity: 0;\n    }\n    100% {\n        transform: scale(1);\n        opacity: 100%;\n    }\n}\n\n@keyframes pop-out {\n    0% {\n        transform: scale(1);\n        opacity: 100%;\n        display: block;\n    }\n    100% {\n        transform: scale(0);\n        opacity: 0;\n        display: none;\n    }\n}"],sourceRoot:""}]);const a=l},215:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var o=t(537),r=t.n(o),i=t(645),l=t.n(i)()(r());l.push([e.id,'/*\n    Great help\n    https://moderncss.dev/pure-css-custom-checkbox-style/\n*/\n\ndiv.days-cont > input[type="checkbox"]{\n     /* Add if not using autoprefixer */\n    -webkit-appearance: none;\n    appearance: none;\n    /* For iOS < 15 to remove gradient background */\n    background-color: inherit;\n    \n    height: 2rem;\n    width: 2rem;\n    border: 1px solid currentColor;\n    border-top-right-radius: 4px;\n    border-top-left-radius: 4px;\n    cursor: pointer;\n\n    &::before {\n        content: attr(day);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100%;\n        width: 100%;\n        font-size: 1.1rem;\n    }\n\n    &:checked {\n        background-color: limegreen;\n        color: white;\n    }\n}\n\ndiv.round > input[type="checkbox"] {\n    /* Add if not using autoprefixer */\n    -webkit-appearance: none;\n    appearance: none;\n    /* For iOS < 15 to remove gradient background */\n    background-color: inherit;\n\n    height: 1.5rem;\n    width: 1.5rem;\n    border-radius: 100px;\n    cursor: pointer;\n\n    &:checked {\n        background-color: limegreen;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        &::before {\n            content: \'\\2713\';\n            font-size: 100%;\n            color: var(--color);\n        }\n    }\n}\n\n',"",{version:3,sources:["webpack://./src/styles/checkbox.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;KACK,kCAAkC;IACnC,wBAAwB;IACxB,gBAAgB;IAChB,+CAA+C;IAC/C,yBAAyB;;IAEzB,YAAY;IACZ,WAAW;IACX,8BAA8B;IAC9B,4BAA4B;IAC5B,2BAA2B;IAC3B,eAAe;;IAEf;QACI,kBAAkB;QAClB,aAAa;QACb,uBAAuB;QACvB,mBAAmB;QACnB,YAAY;QACZ,WAAW;QACX,iBAAiB;IACrB;;IAEA;QACI,2BAA2B;QAC3B,YAAY;IAChB;AACJ;;AAEA;IACI,kCAAkC;IAClC,wBAAwB;IACxB,gBAAgB;IAChB,+CAA+C;IAC/C,yBAAyB;;IAEzB,cAAc;IACd,aAAa;IACb,oBAAoB;IACpB,eAAe;;IAEf;QACI,2BAA2B;QAC3B,aAAa;QACb,uBAAuB;QACvB,mBAAmB;;QAEnB;YACI,gBAAgB;YAChB,eAAe;YACf,mBAAmB;QACvB;IACJ;AACJ",sourcesContent:['/*\n    Great help\n    https://moderncss.dev/pure-css-custom-checkbox-style/\n*/\n\ndiv.days-cont > input[type="checkbox"]{\n     /* Add if not using autoprefixer */\n    -webkit-appearance: none;\n    appearance: none;\n    /* For iOS < 15 to remove gradient background */\n    background-color: inherit;\n    \n    height: 2rem;\n    width: 2rem;\n    border: 1px solid currentColor;\n    border-top-right-radius: 4px;\n    border-top-left-radius: 4px;\n    cursor: pointer;\n\n    &::before {\n        content: attr(day);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100%;\n        width: 100%;\n        font-size: 1.1rem;\n    }\n\n    &:checked {\n        background-color: limegreen;\n        color: white;\n    }\n}\n\ndiv.round > input[type="checkbox"] {\n    /* Add if not using autoprefixer */\n    -webkit-appearance: none;\n    appearance: none;\n    /* For iOS < 15 to remove gradient background */\n    background-color: inherit;\n\n    height: 1.5rem;\n    width: 1.5rem;\n    border-radius: 100px;\n    cursor: pointer;\n\n    &:checked {\n        background-color: limegreen;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        &::before {\n            content: \'\\2713\';\n            font-size: 100%;\n            color: var(--color);\n        }\n    }\n}\n\n'],sourceRoot:""}]);const a=l},434:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var o=t(537),r=t.n(o),i=t(645),l=t.n(i)()(r());l.push([e.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}","",{version:3,sources:["webpack://./src/styles/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}"],sourceRoot:""}]);const a=l},772:(e,n,t)=>{"use strict";t.d(n,{Z:()=>u});var o=t(537),r=t.n(o),i=t(645),l=t.n(i),a=t(434),s=t(606),c=t(439),d=t(215),p=l()(r());p.i(a.Z),p.i(s.Z),p.i(c.Z),p.i(d.Z),p.push([e.id,'*{\n    box-sizing: border-box;\n}\n\n#content {\n    min-height: 100vh;\n    color: var(--color);\n    background-color: var(--background-color);\n    font-family: var(--font-family);\n    color-scheme: var(--color-scheme);\n\n    /* Layout */\n    /* display: flex;\n    flex-direction: column;\n    justify-content: space-between; */\n}\n\n.flip {\n    transform: rotate(180deg); \n    \n    &:is(svg, i):hover{\n        transform: rotate(180deg) scale(120%); \n    }\n}\n\nsvg, i {\n    cursor: pointer;\n    \n    &:hover {\n        transform: scale(120%);\n    }\n}\n\n.header {\n    display: flex;\n    justify-content: space-evenly;\n    gap: var(--gap);\n    padding: var(--padding-top-bottom) var(--padding-left-right);\n    position: sticky;\n    top: 0;\n    box-shadow: var(--shadow-color) 0px 3.5px 4.5px 4.5px;\n\n    background-color: var(--header-color);\n    backdrop-filter: blur(10px);\n\n    margin-bottom: var(--padding-top-bottom);\n\n    z-index: 10;\n\n    & > .logo {\n        flex: 1;\n        font-size: var(--title-font-size);\n    }\n\n    & ul {\n        display: flex;\n        justify-content: space-evenly;\n        gap: calc(2 * var(--gap));\n    }\n}\n\nli, .logo {\n    display: flex;\n    align-items: center;\n    gap: var(--gap);\n}\n\ndialog, input {\n    /* font and background */\n    color: var(--color);\n    background-color: var(--shadow-color);\n    font-family: var(--font-family);\n\n    &::backdrop {\n        background-color: var(--shadow-color);\n        backdrop-filter: blur(2px);\n    }\n}\n\n#sidebar-dialog {\n\n    position: fixed;\n    height: 100vh;\n    margin: 0;\n    padding: 0;\n    top: calc(2 * var(--padding-top-bottom) + var(--title-font-size) + var(--header-shadow-width));\n    left: 0;\n    border: none;\n    outline: none;\n    \n    /* transition */\n    animation: slide-out 0.5s ease-out;\n\n    &[open] {\n        animation: slide-in 0.5s ease-out;\n    }\n\n    & > nav {\n        width: 100%;\n    }\n\n    & ul {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-evenly;\n    \n        & > li {\n            padding: calc(0.5 * var(--gap)) var(--padding-left-right);\n            cursor: pointer;\n\n            &:hover {\n                background-color: var(--background-color);\n            }\n        }\n    }\n}\n\nmain {\n    padding: var(--padding-top-bottom) 0;\n}\n\n.page-container, .todo-item-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: var(--gap);\n    width: 100%;\n}\n\n.page-container .heading {\n    font-size: 1.5rem;\n    display: flex;\n    gap: var(--gap);\n    align-items: center;\n    justify-content: flex-start;\n    width: min(1000px, 98%);\n    padding: var(--padding-top-bottom) 0;\n    border-bottom: 4px solid var(--shadow-color);\n    \n    & > svg {\n        cursor: auto;\n\n        &:hover {\n            transform: scale(1);\n        }\n    }\n}\n\n.upcoming-heading-cont {\n    display: flex;\n    justify-content: space-between;\n    width: min(1000px, 98%);\n    border-bottom: 4px solid var(--shadow-color);\n\n    & > .heading {\n        border: 0;\n    }\n\n    & > input[type="date"] {\n        font-size: 1rem;\n        color-scheme: var(--color-scheme);\n        padding: 0 var(--padding-left-right);\n        color: var(--color);\n        background-color: var(--background-color);\n    }\n}\n\n.todo-item-container {\n    flex-direction: column-reverse;\n\n    &:empty {\n        display: none;\n    }\n}\n\n.item-adder {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    gap: var(--gap);\n}\n\n.todo-item {\n    /* display and grid view */\n    display: grid;\n    grid-template-columns: min-content repeat(3, 1fr);\n    /* grid-template-rows:  repeat(2, 1fr); */\n\n    /* padding and width for better view */\n    padding: var(--padding-top-bottom) var(--padding-left-right);\n    width: min(1000px, 98%);\n    border-radius: 10px;\n    overflow: hidden;\n    background-color: var(--shadow-color);\n\n    & > .todo-item-checkbox {\n        grid-column: 1 / 2;\n        grid-row: 1 / 3;\n        height: 100%;\n        display: flex;\n        align-items: center;\n    }\n\n    & > .todo-item-title {\n        grid-column: 2 / 4;\n        grid-row: 1 / 2;\n    }\n    \n    & > .todo-item-description {\n        grid-column: 2 / 4;\n        grid-row: 2 / 3;\n    } \n    \n    & > .todo-item-icon-set{\n        grid-column: 4 / 5;\n        grid-row: 1 / 2;\n        \n        & > ul {\n            display: flex;\n            justify-content: end;\n            gap: var(--gap);\n        }\n    }\n\n    & > .todo-item-hashtag {\n        grid-column: 4 / 5;\n        grid-row: 2 / 3;\n        cursor: pointer;\n\n        &:not(:empty):before {\n            content: \'#\';\n        }\n\n        &:hover {\n            text-decoration: underline;\n        }\n    }\n    \n    & > .todo-item-right {\n        text-align: end;\n    }\n\n    & [class*="trash"] {\n        color: red;\n    }\n\n    /* animations */\n    &.add {\n        animation: pop-in 0.3s ease-out;\n    }\n    \n    &.remove {\n        animation: pop-out 0.3s ease-out;\n    }\n\n    \n}\n\ndiv.text-container {\n    width: 100%;\n    text-wrap: nowrap;\n    overflow: hidden !important;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n}\n\ndialog.modal-form-container {\n    border-radius: 10px;\n}\n\nform.modal-form {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: max-content max-content;\n    gap: var(--gap);\n    justify-content: center;\n    max-width: 400px;\n\n    & > .modal-form-content {\n        grid-column: 1 / 3;\n        grid-row: 1 / 2;\n\n        & > div {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin: var(--gap);\n        }\n    }\n\n    & > button {\n        padding: 0.3rem 1rem;\n        border-radius: 10px;\n        font-size: 1.1rem;\n        cursor: pointer;\n    \n        /* &[class*="cancel"] {\n            background-color: red;\n            color: white;\n        } */\n\n        &[class*="submit"] {\n            background-color: limegreen;\n            color: white;\n        }\n    }\n}\n\ninput {\n    font-size: 1.1rem;\n    color: var(--color);\n    background-color: var(--background-color);\n    outline: none;\n    border-radius: 5px;\n    border: 1px solid currentColor;\n}\n\n.text-input {\n    position: relative;\n    height: var(--text-input-height);\n    display: flex;\n    justify-content: center !important;\n    align-items: center !important;\n\n    & > label {\n        position: absolute;\n        cursor: text;\n\n        &:has(~ input:focus, ~ input:valid) {\n            top: -0.6rem;\n            left: 1rem;\n            background-color: limegreen;\n            color: white;\n            padding: 0.2rem 0.4rem;\n        }\n    }\n\n    & > input {\n        align-self: flex-end;\n        height: 100%;\n        width: 100%;\n        outline: none;\n        font-size: 1.1rem;\n        padding: 0 1rem;\n\n        &:is(:focus, :valid){\n            border: 2px solid limegreen;\n        }\n\n    }\n}\n\ndiv.date-priority-project-cont {\n    display: grid !important;\n    gap: var(--gap);\n    text-align: center;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr;\n\n    & > div:has(input[type="date"]) {\n        grid-column: 1 / 3;\n        grid-row: 1 / 2;\n        color-scheme: var(--color-scheme);\n        color: var(--color);\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: calc(var(--text-input-height)*0.6);\n        gap: var(--gap);\n\n        & > input[type="date"] {\n            width: 100%;\n            height: 100%;\n            text-align: center;\n            padding: 0.3rem 0.1rem;\n            cursor: pointer;\n            background-color: var(--background-color);\n\n            &.selected {\n                background-color: limegreen;\n                color: white;\n            }        \n        }\n    }\n\n    & > select {\n        font-size: 1.05rem;\n        text-align: center;\n        background-color: var(--background-color);\n        color: var(--color);\n        border: 1px solid currentColor;\n        border-radius: 5px;\n        outline: 0;\n        padding: 0.3rem 0.1rem;\n        width: 100%;\n\n        & > option {\n            background-color: var(--background-color);\n            color: var(--color);\n        }\n\n        &:valid {\n            background-color: limegreen;\n            color: white;\n        }\n    }\n}\n',"",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAKA;IACI,sBAAsB;AAC1B;;AAEA;IACI,iBAAiB;IACjB,mBAAmB;IACnB,yCAAyC;IACzC,+BAA+B;IAC/B,iCAAiC;;IAEjC,WAAW;IACX;;qCAEiC;AACrC;;AAEA;IACI,yBAAyB;;IAEzB;QACI,qCAAqC;IACzC;AACJ;;AAEA;IACI,eAAe;;IAEf;QACI,sBAAsB;IAC1B;AACJ;;AAEA;IACI,aAAa;IACb,6BAA6B;IAC7B,eAAe;IACf,4DAA4D;IAC5D,gBAAgB;IAChB,MAAM;IACN,qDAAqD;;IAErD,qCAAqC;IACrC,2BAA2B;;IAE3B,wCAAwC;;IAExC,WAAW;;IAEX;QACI,OAAO;QACP,iCAAiC;IACrC;;IAEA;QACI,aAAa;QACb,6BAA6B;QAC7B,yBAAyB;IAC7B;AACJ;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,wBAAwB;IACxB,mBAAmB;IACnB,qCAAqC;IACrC,+BAA+B;;IAE/B;QACI,qCAAqC;QACrC,0BAA0B;IAC9B;AACJ;;AAEA;;IAEI,eAAe;IACf,aAAa;IACb,SAAS;IACT,UAAU;IACV,8FAA8F;IAC9F,OAAO;IACP,YAAY;IACZ,aAAa;;IAEb,eAAe;IACf,kCAAkC;;IAElC;QACI,iCAAiC;IACrC;;IAEA;QACI,WAAW;IACf;;IAEA;QACI,aAAa;QACb,sBAAsB;QACtB,6BAA6B;;QAE7B;YACI,yDAAyD;YACzD,eAAe;;YAEf;gBACI,yCAAyC;YAC7C;QACJ;IACJ;AACJ;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,eAAe;IACf,WAAW;AACf;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,eAAe;IACf,mBAAmB;IACnB,2BAA2B;IAC3B,uBAAuB;IACvB,oCAAoC;IACpC,4CAA4C;;IAE5C;QACI,YAAY;;QAEZ;YACI,mBAAmB;QACvB;IACJ;AACJ;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,uBAAuB;IACvB,4CAA4C;;IAE5C;QACI,SAAS;IACb;;IAEA;QACI,eAAe;QACf,iCAAiC;QACjC,oCAAoC;QACpC,mBAAmB;QACnB,yCAAyC;IAC7C;AACJ;;AAEA;IACI,8BAA8B;;IAE9B;QACI,aAAa;IACjB;AACJ;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,eAAe;IACf,eAAe;AACnB;;AAEA;IACI,0BAA0B;IAC1B,aAAa;IACb,iDAAiD;IACjD,yCAAyC;;IAEzC,sCAAsC;IACtC,4DAA4D;IAC5D,uBAAuB;IACvB,mBAAmB;IACnB,gBAAgB;IAChB,qCAAqC;;IAErC;QACI,kBAAkB;QAClB,eAAe;QACf,YAAY;QACZ,aAAa;QACb,mBAAmB;IACvB;;IAEA;QACI,kBAAkB;QAClB,eAAe;IACnB;;IAEA;QACI,kBAAkB;QAClB,eAAe;IACnB;;IAEA;QACI,kBAAkB;QAClB,eAAe;;QAEf;YACI,aAAa;YACb,oBAAoB;YACpB,eAAe;QACnB;IACJ;;IAEA;QACI,kBAAkB;QAClB,eAAe;QACf,eAAe;;QAEf;YACI,YAAY;QAChB;;QAEA;YACI,0BAA0B;QAC9B;IACJ;;IAEA;QACI,eAAe;IACnB;;IAEA;QACI,UAAU;IACd;;IAEA,eAAe;IACf;QACI,+BAA+B;IACnC;;IAEA;QACI,gCAAgC;IACpC;;;AAGJ;;AAEA;IACI,WAAW;IACX,iBAAiB;IACjB,2BAA2B;IAC3B,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,2CAA2C;IAC3C,eAAe;IACf,uBAAuB;IACvB,gBAAgB;;IAEhB;QACI,kBAAkB;QAClB,eAAe;;QAEf;YACI,aAAa;YACb,8BAA8B;YAC9B,mBAAmB;YACnB,kBAAkB;QACtB;IACJ;;IAEA;QACI,oBAAoB;QACpB,mBAAmB;QACnB,iBAAiB;QACjB,eAAe;;QAEf;;;WAGG;;QAEH;YACI,2BAA2B;YAC3B,YAAY;QAChB;IACJ;AACJ;;AAEA;IACI,iBAAiB;IACjB,mBAAmB;IACnB,yCAAyC;IACzC,aAAa;IACb,kBAAkB;IAClB,8BAA8B;AAClC;;AAEA;IACI,kBAAkB;IAClB,gCAAgC;IAChC,aAAa;IACb,kCAAkC;IAClC,8BAA8B;;IAE9B;QACI,kBAAkB;QAClB,YAAY;;QAEZ;YACI,YAAY;YACZ,UAAU;YACV,2BAA2B;YAC3B,YAAY;YACZ,sBAAsB;QAC1B;IACJ;;IAEA;QACI,oBAAoB;QACpB,YAAY;QACZ,WAAW;QACX,aAAa;QACb,iBAAiB;QACjB,eAAe;;QAEf;YACI,2BAA2B;QAC/B;;IAEJ;AACJ;;AAEA;IACI,wBAAwB;IACxB,eAAe;IACf,kBAAkB;IAClB,8BAA8B;IAC9B,2BAA2B;;IAE3B;QACI,kBAAkB;QAClB,eAAe;QACf,iCAAiC;QACjC,mBAAmB;QACnB,WAAW;QACX,aAAa;QACb,uBAAuB;QACvB,mBAAmB;QACnB,0CAA0C;QAC1C,eAAe;;QAEf;YACI,WAAW;YACX,YAAY;YACZ,kBAAkB;YAClB,sBAAsB;YACtB,eAAe;YACf,yCAAyC;;YAEzC;gBACI,2BAA2B;gBAC3B,YAAY;YAChB;QACJ;IACJ;;IAEA;QACI,kBAAkB;QAClB,kBAAkB;QAClB,yCAAyC;QACzC,mBAAmB;QACnB,8BAA8B;QAC9B,kBAAkB;QAClB,UAAU;QACV,sBAAsB;QACtB,WAAW;;QAEX;YACI,yCAAyC;YACzC,mBAAmB;QACvB;;QAEA;YACI,2BAA2B;YAC3B,YAAY;QAChB;IACJ;AACJ",sourcesContent:['@import url("reset.css");\n@import url("var.css");\n@import url("animations.css");\n@import url("checkbox.css");\n\n*{\n    box-sizing: border-box;\n}\n\n#content {\n    min-height: 100vh;\n    color: var(--color);\n    background-color: var(--background-color);\n    font-family: var(--font-family);\n    color-scheme: var(--color-scheme);\n\n    /* Layout */\n    /* display: flex;\n    flex-direction: column;\n    justify-content: space-between; */\n}\n\n.flip {\n    transform: rotate(180deg); \n    \n    &:is(svg, i):hover{\n        transform: rotate(180deg) scale(120%); \n    }\n}\n\nsvg, i {\n    cursor: pointer;\n    \n    &:hover {\n        transform: scale(120%);\n    }\n}\n\n.header {\n    display: flex;\n    justify-content: space-evenly;\n    gap: var(--gap);\n    padding: var(--padding-top-bottom) var(--padding-left-right);\n    position: sticky;\n    top: 0;\n    box-shadow: var(--shadow-color) 0px 3.5px 4.5px 4.5px;\n\n    background-color: var(--header-color);\n    backdrop-filter: blur(10px);\n\n    margin-bottom: var(--padding-top-bottom);\n\n    z-index: 10;\n\n    & > .logo {\n        flex: 1;\n        font-size: var(--title-font-size);\n    }\n\n    & ul {\n        display: flex;\n        justify-content: space-evenly;\n        gap: calc(2 * var(--gap));\n    }\n}\n\nli, .logo {\n    display: flex;\n    align-items: center;\n    gap: var(--gap);\n}\n\ndialog, input {\n    /* font and background */\n    color: var(--color);\n    background-color: var(--shadow-color);\n    font-family: var(--font-family);\n\n    &::backdrop {\n        background-color: var(--shadow-color);\n        backdrop-filter: blur(2px);\n    }\n}\n\n#sidebar-dialog {\n\n    position: fixed;\n    height: 100vh;\n    margin: 0;\n    padding: 0;\n    top: calc(2 * var(--padding-top-bottom) + var(--title-font-size) + var(--header-shadow-width));\n    left: 0;\n    border: none;\n    outline: none;\n    \n    /* transition */\n    animation: slide-out 0.5s ease-out;\n\n    &[open] {\n        animation: slide-in 0.5s ease-out;\n    }\n\n    & > nav {\n        width: 100%;\n    }\n\n    & ul {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-evenly;\n    \n        & > li {\n            padding: calc(0.5 * var(--gap)) var(--padding-left-right);\n            cursor: pointer;\n\n            &:hover {\n                background-color: var(--background-color);\n            }\n        }\n    }\n}\n\nmain {\n    padding: var(--padding-top-bottom) 0;\n}\n\n.page-container, .todo-item-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: var(--gap);\n    width: 100%;\n}\n\n.page-container .heading {\n    font-size: 1.5rem;\n    display: flex;\n    gap: var(--gap);\n    align-items: center;\n    justify-content: flex-start;\n    width: min(1000px, 98%);\n    padding: var(--padding-top-bottom) 0;\n    border-bottom: 4px solid var(--shadow-color);\n    \n    & > svg {\n        cursor: auto;\n\n        &:hover {\n            transform: scale(1);\n        }\n    }\n}\n\n.upcoming-heading-cont {\n    display: flex;\n    justify-content: space-between;\n    width: min(1000px, 98%);\n    border-bottom: 4px solid var(--shadow-color);\n\n    & > .heading {\n        border: 0;\n    }\n\n    & > input[type="date"] {\n        font-size: 1rem;\n        color-scheme: var(--color-scheme);\n        padding: 0 var(--padding-left-right);\n        color: var(--color);\n        background-color: var(--background-color);\n    }\n}\n\n.todo-item-container {\n    flex-direction: column-reverse;\n\n    &:empty {\n        display: none;\n    }\n}\n\n.item-adder {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    gap: var(--gap);\n}\n\n.todo-item {\n    /* display and grid view */\n    display: grid;\n    grid-template-columns: min-content repeat(3, 1fr);\n    /* grid-template-rows:  repeat(2, 1fr); */\n\n    /* padding and width for better view */\n    padding: var(--padding-top-bottom) var(--padding-left-right);\n    width: min(1000px, 98%);\n    border-radius: 10px;\n    overflow: hidden;\n    background-color: var(--shadow-color);\n\n    & > .todo-item-checkbox {\n        grid-column: 1 / 2;\n        grid-row: 1 / 3;\n        height: 100%;\n        display: flex;\n        align-items: center;\n    }\n\n    & > .todo-item-title {\n        grid-column: 2 / 4;\n        grid-row: 1 / 2;\n    }\n    \n    & > .todo-item-description {\n        grid-column: 2 / 4;\n        grid-row: 2 / 3;\n    } \n    \n    & > .todo-item-icon-set{\n        grid-column: 4 / 5;\n        grid-row: 1 / 2;\n        \n        & > ul {\n            display: flex;\n            justify-content: end;\n            gap: var(--gap);\n        }\n    }\n\n    & > .todo-item-hashtag {\n        grid-column: 4 / 5;\n        grid-row: 2 / 3;\n        cursor: pointer;\n\n        &:not(:empty):before {\n            content: \'#\';\n        }\n\n        &:hover {\n            text-decoration: underline;\n        }\n    }\n    \n    & > .todo-item-right {\n        text-align: end;\n    }\n\n    & [class*="trash"] {\n        color: red;\n    }\n\n    /* animations */\n    &.add {\n        animation: pop-in 0.3s ease-out;\n    }\n    \n    &.remove {\n        animation: pop-out 0.3s ease-out;\n    }\n\n    \n}\n\ndiv.text-container {\n    width: 100%;\n    text-wrap: nowrap;\n    overflow: hidden !important;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n}\n\ndialog.modal-form-container {\n    border-radius: 10px;\n}\n\nform.modal-form {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: max-content max-content;\n    gap: var(--gap);\n    justify-content: center;\n    max-width: 400px;\n\n    & > .modal-form-content {\n        grid-column: 1 / 3;\n        grid-row: 1 / 2;\n\n        & > div {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin: var(--gap);\n        }\n    }\n\n    & > button {\n        padding: 0.3rem 1rem;\n        border-radius: 10px;\n        font-size: 1.1rem;\n        cursor: pointer;\n    \n        /* &[class*="cancel"] {\n            background-color: red;\n            color: white;\n        } */\n\n        &[class*="submit"] {\n            background-color: limegreen;\n            color: white;\n        }\n    }\n}\n\ninput {\n    font-size: 1.1rem;\n    color: var(--color);\n    background-color: var(--background-color);\n    outline: none;\n    border-radius: 5px;\n    border: 1px solid currentColor;\n}\n\n.text-input {\n    position: relative;\n    height: var(--text-input-height);\n    display: flex;\n    justify-content: center !important;\n    align-items: center !important;\n\n    & > label {\n        position: absolute;\n        cursor: text;\n\n        &:has(~ input:focus, ~ input:valid) {\n            top: -0.6rem;\n            left: 1rem;\n            background-color: limegreen;\n            color: white;\n            padding: 0.2rem 0.4rem;\n        }\n    }\n\n    & > input {\n        align-self: flex-end;\n        height: 100%;\n        width: 100%;\n        outline: none;\n        font-size: 1.1rem;\n        padding: 0 1rem;\n\n        &:is(:focus, :valid){\n            border: 2px solid limegreen;\n        }\n\n    }\n}\n\ndiv.date-priority-project-cont {\n    display: grid !important;\n    gap: var(--gap);\n    text-align: center;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr;\n\n    & > div:has(input[type="date"]) {\n        grid-column: 1 / 3;\n        grid-row: 1 / 2;\n        color-scheme: var(--color-scheme);\n        color: var(--color);\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: calc(var(--text-input-height)*0.6);\n        gap: var(--gap);\n\n        & > input[type="date"] {\n            width: 100%;\n            height: 100%;\n            text-align: center;\n            padding: 0.3rem 0.1rem;\n            cursor: pointer;\n            background-color: var(--background-color);\n\n            &.selected {\n                background-color: limegreen;\n                color: white;\n            }        \n        }\n    }\n\n    & > select {\n        font-size: 1.05rem;\n        text-align: center;\n        background-color: var(--background-color);\n        color: var(--color);\n        border: 1px solid currentColor;\n        border-radius: 5px;\n        outline: 0;\n        padding: 0.3rem 0.1rem;\n        width: 100%;\n\n        & > option {\n            background-color: var(--background-color);\n            color: var(--color);\n        }\n\n        &:valid {\n            background-color: limegreen;\n            color: white;\n        }\n    }\n}\n'],sourceRoot:""}]);const u=p},606:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var o=t(537),r=t.n(o),i=t(645),l=t.n(i)()(r());l.push([e.id,":root {\n    --title-font-size: 1.5rem;\n    --padding-top-bottom: min(2vh, 1rem);\n    --padding-left-right:  min(2vw, 1rem);\n    --gap: 1rem;\n    --font-family: 'Courier New', Courier, monospace;\n    --header-color: var(--shadow-color)88;\n    --header-shadow-width: 5px;\n\n    /* Form variables */\n    --text-input-width: 100%;\n    --text-input-height: 4rem;\n\n    /* Theme Dependent variables */\n\n    --color: black;\n    --background-color: white;\n    --shadow-color: #e0e0e0;\n    --color-scheme: light;\n    \n}\n\n:root.dark {\n    --color: white;\n    --background-color: black;\n    --shadow-color: #1f1f1f;\n    --color-scheme: dark;\n}","",{version:3,sources:["webpack://./src/styles/var.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,oCAAoC;IACpC,qCAAqC;IACrC,WAAW;IACX,gDAAgD;IAChD,qCAAqC;IACrC,0BAA0B;;IAE1B,mBAAmB;IACnB,wBAAwB;IACxB,yBAAyB;;IAEzB,8BAA8B;;IAE9B,cAAc;IACd,yBAAyB;IACzB,uBAAuB;IACvB,qBAAqB;;AAEzB;;AAEA;IACI,cAAc;IACd,yBAAyB;IACzB,uBAAuB;IACvB,oBAAoB;AACxB",sourcesContent:[":root {\n    --title-font-size: 1.5rem;\n    --padding-top-bottom: min(2vh, 1rem);\n    --padding-left-right:  min(2vw, 1rem);\n    --gap: 1rem;\n    --font-family: 'Courier New', Courier, monospace;\n    --header-color: var(--shadow-color)88;\n    --header-shadow-width: 5px;\n\n    /* Form variables */\n    --text-input-width: 100%;\n    --text-input-height: 4rem;\n\n    /* Theme Dependent variables */\n\n    --color: black;\n    --background-color: white;\n    --shadow-color: #e0e0e0;\n    --color-scheme: light;\n    \n}\n\n:root.dark {\n    --color: white;\n    --background-color: black;\n    --shadow-color: #1f1f1f;\n    --color-scheme: dark;\n}"],sourceRoot:""}]);const a=l},645:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var l={};if(o)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(l[s]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);o&&l[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),n.push(d))}},n}},537:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},508:function(e){var n;"undefined"!=typeof self&&self,n=function(){return function(e){var n={};function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:o})},t.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}({"./dist/icons.json":function(e){e.exports={activity:'<polyline points="22 12 18 12 15 21 9 3 6 12 2 12"></polyline>',airplay:'<path d="M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1"></path><polygon points="12 15 17 21 7 21 12 15"></polygon>',"alert-circle":'<circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="12"></line><line x1="12" y1="16" x2="12.01" y2="16"></line>',"alert-octagon":'<polygon points="7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"></polygon><line x1="12" y1="8" x2="12" y2="12"></line><line x1="12" y1="16" x2="12.01" y2="16"></line>',"alert-triangle":'<path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path><line x1="12" y1="9" x2="12" y2="13"></line><line x1="12" y1="17" x2="12.01" y2="17"></line>',"align-center":'<line x1="18" y1="10" x2="6" y2="10"></line><line x1="21" y1="6" x2="3" y2="6"></line><line x1="21" y1="14" x2="3" y2="14"></line><line x1="18" y1="18" x2="6" y2="18"></line>',"align-justify":'<line x1="21" y1="10" x2="3" y2="10"></line><line x1="21" y1="6" x2="3" y2="6"></line><line x1="21" y1="14" x2="3" y2="14"></line><line x1="21" y1="18" x2="3" y2="18"></line>',"align-left":'<line x1="17" y1="10" x2="3" y2="10"></line><line x1="21" y1="6" x2="3" y2="6"></line><line x1="21" y1="14" x2="3" y2="14"></line><line x1="17" y1="18" x2="3" y2="18"></line>',"align-right":'<line x1="21" y1="10" x2="7" y2="10"></line><line x1="21" y1="6" x2="3" y2="6"></line><line x1="21" y1="14" x2="3" y2="14"></line><line x1="21" y1="18" x2="7" y2="18"></line>',anchor:'<circle cx="12" cy="5" r="3"></circle><line x1="12" y1="22" x2="12" y2="8"></line><path d="M5 12H2a10 10 0 0 0 20 0h-3"></path>',aperture:'<circle cx="12" cy="12" r="10"></circle><line x1="14.31" y1="8" x2="20.05" y2="17.94"></line><line x1="9.69" y1="8" x2="21.17" y2="8"></line><line x1="7.38" y1="12" x2="13.12" y2="2.06"></line><line x1="9.69" y1="16" x2="3.95" y2="6.06"></line><line x1="14.31" y1="16" x2="2.83" y2="16"></line><line x1="16.62" y1="12" x2="10.88" y2="21.94"></line>',archive:'<polyline points="21 8 21 21 3 21 3 8"></polyline><rect x="1" y="3" width="22" height="5"></rect><line x1="10" y1="12" x2="14" y2="12"></line>',"arrow-down-circle":'<circle cx="12" cy="12" r="10"></circle><polyline points="8 12 12 16 16 12"></polyline><line x1="12" y1="8" x2="12" y2="16"></line>',"arrow-down-left":'<line x1="17" y1="7" x2="7" y2="17"></line><polyline points="17 17 7 17 7 7"></polyline>',"arrow-down-right":'<line x1="7" y1="7" x2="17" y2="17"></line><polyline points="17 7 17 17 7 17"></polyline>',"arrow-down":'<line x1="12" y1="5" x2="12" y2="19"></line><polyline points="19 12 12 19 5 12"></polyline>',"arrow-left-circle":'<circle cx="12" cy="12" r="10"></circle><polyline points="12 8 8 12 12 16"></polyline><line x1="16" y1="12" x2="8" y2="12"></line>',"arrow-left":'<line x1="19" y1="12" x2="5" y2="12"></line><polyline points="12 19 5 12 12 5"></polyline>',"arrow-right-circle":'<circle cx="12" cy="12" r="10"></circle><polyline points="12 16 16 12 12 8"></polyline><line x1="8" y1="12" x2="16" y2="12"></line>',"arrow-right":'<line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline>',"arrow-up-circle":'<circle cx="12" cy="12" r="10"></circle><polyline points="16 12 12 8 8 12"></polyline><line x1="12" y1="16" x2="12" y2="8"></line>',"arrow-up-left":'<line x1="17" y1="17" x2="7" y2="7"></line><polyline points="7 17 7 7 17 7"></polyline>',"arrow-up-right":'<line x1="7" y1="17" x2="17" y2="7"></line><polyline points="7 7 17 7 17 17"></polyline>',"arrow-up":'<line x1="12" y1="19" x2="12" y2="5"></line><polyline points="5 12 12 5 19 12"></polyline>',"at-sign":'<circle cx="12" cy="12" r="4"></circle><path d="M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94"></path>',award:'<circle cx="12" cy="8" r="7"></circle><polyline points="8.21 13.89 7 23 12 20 17 23 15.79 13.88"></polyline>',"bar-chart-2":'<line x1="18" y1="20" x2="18" y2="10"></line><line x1="12" y1="20" x2="12" y2="4"></line><line x1="6" y1="20" x2="6" y2="14"></line>',"bar-chart":'<line x1="12" y1="20" x2="12" y2="10"></line><line x1="18" y1="20" x2="18" y2="4"></line><line x1="6" y1="20" x2="6" y2="16"></line>',"battery-charging":'<path d="M5 18H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.19M15 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.19"></path><line x1="23" y1="13" x2="23" y2="11"></line><polyline points="11 6 7 12 13 12 9 18"></polyline>',battery:'<rect x="1" y="6" width="18" height="12" rx="2" ry="2"></rect><line x1="23" y1="13" x2="23" y2="11"></line>',"bell-off":'<path d="M13.73 21a2 2 0 0 1-3.46 0"></path><path d="M18.63 13A17.89 17.89 0 0 1 18 8"></path><path d="M6.26 6.26A5.86 5.86 0 0 0 6 8c0 7-3 9-3 9h14"></path><path d="M18 8a6 6 0 0 0-9.33-5"></path><line x1="1" y1="1" x2="23" y2="23"></line>',bell:'<path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"></path><path d="M13.73 21a2 2 0 0 1-3.46 0"></path>',bluetooth:'<polyline points="6.5 6.5 17.5 17.5 12 23 12 1 17.5 6.5 6.5 17.5"></polyline>',bold:'<path d="M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"></path><path d="M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"></path>',"book-open":'<path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path><path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path>',book:'<path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"></path><path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"></path>',bookmark:'<path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path>',box:'<path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path><polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline><line x1="12" y1="22.08" x2="12" y2="12"></line>',briefcase:'<rect x="2" y="7" width="20" height="14" rx="2" ry="2"></rect><path d="M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"></path>',calendar:'<rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect><line x1="16" y1="2" x2="16" y2="6"></line><line x1="8" y1="2" x2="8" y2="6"></line><line x1="3" y1="10" x2="21" y2="10"></line>',"camera-off":'<line x1="1" y1="1" x2="23" y2="23"></line><path d="M21 21H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3m3-3h6l2 3h4a2 2 0 0 1 2 2v9.34m-7.72-2.06a4 4 0 1 1-5.56-5.56"></path>',camera:'<path d="M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"></path><circle cx="12" cy="13" r="4"></circle>',cast:'<path d="M2 16.1A5 5 0 0 1 5.9 20M2 12.05A9 9 0 0 1 9.95 20M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6"></path><line x1="2" y1="20" x2="2.01" y2="20"></line>',"check-circle":'<path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline>',"check-square":'<polyline points="9 11 12 14 22 4"></polyline><path d="M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11"></path>',check:'<polyline points="20 6 9 17 4 12"></polyline>',"chevron-down":'<polyline points="6 9 12 15 18 9"></polyline>',"chevron-left":'<polyline points="15 18 9 12 15 6"></polyline>',"chevron-right":'<polyline points="9 18 15 12 9 6"></polyline>',"chevron-up":'<polyline points="18 15 12 9 6 15"></polyline>',"chevrons-down":'<polyline points="7 13 12 18 17 13"></polyline><polyline points="7 6 12 11 17 6"></polyline>',"chevrons-left":'<polyline points="11 17 6 12 11 7"></polyline><polyline points="18 17 13 12 18 7"></polyline>',"chevrons-right":'<polyline points="13 17 18 12 13 7"></polyline><polyline points="6 17 11 12 6 7"></polyline>',"chevrons-up":'<polyline points="17 11 12 6 7 11"></polyline><polyline points="17 18 12 13 7 18"></polyline>',chrome:'<circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="4"></circle><line x1="21.17" y1="8" x2="12" y2="8"></line><line x1="3.95" y1="6.06" x2="8.54" y2="14"></line><line x1="10.88" y1="21.94" x2="15.46" y2="14"></line>',circle:'<circle cx="12" cy="12" r="10"></circle>',clipboard:'<path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path><rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect>',clock:'<circle cx="12" cy="12" r="10"></circle><polyline points="12 6 12 12 16 14"></polyline>',"cloud-drizzle":'<line x1="8" y1="19" x2="8" y2="21"></line><line x1="8" y1="13" x2="8" y2="15"></line><line x1="16" y1="19" x2="16" y2="21"></line><line x1="16" y1="13" x2="16" y2="15"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="12" y1="15" x2="12" y2="17"></line><path d="M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"></path>',"cloud-lightning":'<path d="M19 16.9A5 5 0 0 0 18 7h-1.26a8 8 0 1 0-11.62 9"></path><polyline points="13 11 9 17 15 17 11 23"></polyline>',"cloud-off":'<path d="M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3"></path><line x1="1" y1="1" x2="23" y2="23"></line>',"cloud-rain":'<line x1="16" y1="13" x2="16" y2="21"></line><line x1="8" y1="13" x2="8" y2="21"></line><line x1="12" y1="15" x2="12" y2="23"></line><path d="M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"></path>',"cloud-snow":'<path d="M20 17.58A5 5 0 0 0 18 8h-1.26A8 8 0 1 0 4 16.25"></path><line x1="8" y1="16" x2="8.01" y2="16"></line><line x1="8" y1="20" x2="8.01" y2="20"></line><line x1="12" y1="18" x2="12.01" y2="18"></line><line x1="12" y1="22" x2="12.01" y2="22"></line><line x1="16" y1="16" x2="16.01" y2="16"></line><line x1="16" y1="20" x2="16.01" y2="20"></line>',cloud:'<path d="M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z"></path>',code:'<polyline points="16 18 22 12 16 6"></polyline><polyline points="8 6 2 12 8 18"></polyline>',codepen:'<polygon points="12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2"></polygon><line x1="12" y1="22" x2="12" y2="15.5"></line><polyline points="22 8.5 12 15.5 2 8.5"></polyline><polyline points="2 15.5 12 8.5 22 15.5"></polyline><line x1="12" y1="2" x2="12" y2="8.5"></line>',codesandbox:'<path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path><polyline points="7.5 4.21 12 6.81 16.5 4.21"></polyline><polyline points="7.5 19.79 7.5 14.6 3 12"></polyline><polyline points="21 12 16.5 14.6 16.5 19.79"></polyline><polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline><line x1="12" y1="22.08" x2="12" y2="12"></line>',coffee:'<path d="M18 8h1a4 4 0 0 1 0 8h-1"></path><path d="M2 8h16v9a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8z"></path><line x1="6" y1="1" x2="6" y2="4"></line><line x1="10" y1="1" x2="10" y2="4"></line><line x1="14" y1="1" x2="14" y2="4"></line>',columns:'<path d="M12 3h7a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-7m0-18H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7m0-18v18"></path>',command:'<path d="M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z"></path>',compass:'<circle cx="12" cy="12" r="10"></circle><polygon points="16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76"></polygon>',copy:'<rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect><path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>',"corner-down-left":'<polyline points="9 10 4 15 9 20"></polyline><path d="M20 4v7a4 4 0 0 1-4 4H4"></path>',"corner-down-right":'<polyline points="15 10 20 15 15 20"></polyline><path d="M4 4v7a4 4 0 0 0 4 4h12"></path>',"corner-left-down":'<polyline points="14 15 9 20 4 15"></polyline><path d="M20 4h-7a4 4 0 0 0-4 4v12"></path>',"corner-left-up":'<polyline points="14 9 9 4 4 9"></polyline><path d="M20 20h-7a4 4 0 0 1-4-4V4"></path>',"corner-right-down":'<polyline points="10 15 15 20 20 15"></polyline><path d="M4 4h7a4 4 0 0 1 4 4v12"></path>',"corner-right-up":'<polyline points="10 9 15 4 20 9"></polyline><path d="M4 20h7a4 4 0 0 0 4-4V4"></path>',"corner-up-left":'<polyline points="9 14 4 9 9 4"></polyline><path d="M20 20v-7a4 4 0 0 0-4-4H4"></path>',"corner-up-right":'<polyline points="15 14 20 9 15 4"></polyline><path d="M4 20v-7a4 4 0 0 1 4-4h12"></path>',cpu:'<rect x="4" y="4" width="16" height="16" rx="2" ry="2"></rect><rect x="9" y="9" width="6" height="6"></rect><line x1="9" y1="1" x2="9" y2="4"></line><line x1="15" y1="1" x2="15" y2="4"></line><line x1="9" y1="20" x2="9" y2="23"></line><line x1="15" y1="20" x2="15" y2="23"></line><line x1="20" y1="9" x2="23" y2="9"></line><line x1="20" y1="14" x2="23" y2="14"></line><line x1="1" y1="9" x2="4" y2="9"></line><line x1="1" y1="14" x2="4" y2="14"></line>',"credit-card":'<rect x="1" y="4" width="22" height="16" rx="2" ry="2"></rect><line x1="1" y1="10" x2="23" y2="10"></line>',crop:'<path d="M6.13 1L6 16a2 2 0 0 0 2 2h15"></path><path d="M1 6.13L16 6a2 2 0 0 1 2 2v15"></path>',crosshair:'<circle cx="12" cy="12" r="10"></circle><line x1="22" y1="12" x2="18" y2="12"></line><line x1="6" y1="12" x2="2" y2="12"></line><line x1="12" y1="6" x2="12" y2="2"></line><line x1="12" y1="22" x2="12" y2="18"></line>',database:'<ellipse cx="12" cy="5" rx="9" ry="3"></ellipse><path d="M21 12c0 1.66-4 3-9 3s-9-1.34-9-3"></path><path d="M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5"></path>',delete:'<path d="M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"></path><line x1="18" y1="9" x2="12" y2="15"></line><line x1="12" y1="9" x2="18" y2="15"></line>',disc:'<circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="3"></circle>',"divide-circle":'<line x1="8" y1="12" x2="16" y2="12"></line><line x1="12" y1="16" x2="12" y2="16"></line><line x1="12" y1="8" x2="12" y2="8"></line><circle cx="12" cy="12" r="10"></circle>',"divide-square":'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="8" y1="12" x2="16" y2="12"></line><line x1="12" y1="16" x2="12" y2="16"></line><line x1="12" y1="8" x2="12" y2="8"></line>',divide:'<circle cx="12" cy="6" r="2"></circle><line x1="5" y1="12" x2="19" y2="12"></line><circle cx="12" cy="18" r="2"></circle>',"dollar-sign":'<line x1="12" y1="1" x2="12" y2="23"></line><path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path>',"download-cloud":'<polyline points="8 17 12 21 16 17"></polyline><line x1="12" y1="12" x2="12" y2="21"></line><path d="M20.88 18.09A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.29"></path>',download:'<path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="7 10 12 15 17 10"></polyline><line x1="12" y1="15" x2="12" y2="3"></line>',dribbble:'<circle cx="12" cy="12" r="10"></circle><path d="M8.56 2.75c4.37 6.03 6.02 9.42 8.03 17.72m2.54-15.38c-3.72 4.35-8.94 5.66-16.88 5.85m19.5 1.9c-3.5-.93-6.63-.82-8.94 0-2.58.92-5.01 2.86-7.44 6.32"></path>',droplet:'<path d="M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z"></path>',"edit-2":'<path d="M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"></path>',"edit-3":'<path d="M12 20h9"></path><path d="M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z"></path>',edit:'<path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path><path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>',"external-link":'<path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path><polyline points="15 3 21 3 21 9"></polyline><line x1="10" y1="14" x2="21" y2="3"></line>',"eye-off":'<path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"></path><line x1="1" y1="1" x2="23" y2="23"></line>',eye:'<path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path><circle cx="12" cy="12" r="3"></circle>',facebook:'<path d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"></path>',"fast-forward":'<polygon points="13 19 22 12 13 5 13 19"></polygon><polygon points="2 19 11 12 2 5 2 19"></polygon>',feather:'<path d="M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z"></path><line x1="16" y1="8" x2="2" y2="22"></line><line x1="17.5" y1="15" x2="9" y2="15"></line>',figma:'<path d="M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5z"></path><path d="M12 2h3.5a3.5 3.5 0 1 1 0 7H12V2z"></path><path d="M12 12.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 1 1-7 0z"></path><path d="M5 19.5A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0z"></path><path d="M5 12.5A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5z"></path>',"file-minus":'<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="9" y1="15" x2="15" y2="15"></line>',"file-plus":'<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="12" y1="18" x2="12" y2="12"></line><line x1="9" y1="15" x2="15" y2="15"></line>',"file-text":'<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="16" y1="13" x2="8" y2="13"></line><line x1="16" y1="17" x2="8" y2="17"></line><polyline points="10 9 9 9 8 9"></polyline>',file:'<path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"></path><polyline points="13 2 13 9 20 9"></polyline>',film:'<rect x="2" y="2" width="20" height="20" rx="2.18" ry="2.18"></rect><line x1="7" y1="2" x2="7" y2="22"></line><line x1="17" y1="2" x2="17" y2="22"></line><line x1="2" y1="12" x2="22" y2="12"></line><line x1="2" y1="7" x2="7" y2="7"></line><line x1="2" y1="17" x2="7" y2="17"></line><line x1="17" y1="17" x2="22" y2="17"></line><line x1="17" y1="7" x2="22" y2="7"></line>',filter:'<polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3"></polygon>',flag:'<path d="M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z"></path><line x1="4" y1="22" x2="4" y2="15"></line>',"folder-minus":'<path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path><line x1="9" y1="14" x2="15" y2="14"></line>',"folder-plus":'<path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path><line x1="12" y1="11" x2="12" y2="17"></line><line x1="9" y1="14" x2="15" y2="14"></line>',folder:'<path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path>',framer:'<path d="M5 16V9h14V2H5l14 14h-7m-7 0l7 7v-7m-7 0h7"></path>',frown:'<circle cx="12" cy="12" r="10"></circle><path d="M16 16s-1.5-2-4-2-4 2-4 2"></path><line x1="9" y1="9" x2="9.01" y2="9"></line><line x1="15" y1="9" x2="15.01" y2="9"></line>',gift:'<polyline points="20 12 20 22 4 22 4 12"></polyline><rect x="2" y="7" width="20" height="5"></rect><line x1="12" y1="22" x2="12" y2="7"></line><path d="M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z"></path><path d="M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z"></path>',"git-branch":'<line x1="6" y1="3" x2="6" y2="15"></line><circle cx="18" cy="6" r="3"></circle><circle cx="6" cy="18" r="3"></circle><path d="M18 9a9 9 0 0 1-9 9"></path>',"git-commit":'<circle cx="12" cy="12" r="4"></circle><line x1="1.05" y1="12" x2="7" y2="12"></line><line x1="17.01" y1="12" x2="22.96" y2="12"></line>',"git-merge":'<circle cx="18" cy="18" r="3"></circle><circle cx="6" cy="6" r="3"></circle><path d="M6 21V9a9 9 0 0 0 9 9"></path>',"git-pull-request":'<circle cx="18" cy="18" r="3"></circle><circle cx="6" cy="6" r="3"></circle><path d="M13 6h3a2 2 0 0 1 2 2v7"></path><line x1="6" y1="9" x2="6" y2="21"></line>',github:'<path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path>',gitlab:'<path d="M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 0 1-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 0 1 4.82 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0 1 18.6 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.51L23 13.45a.84.84 0 0 1-.35.94z"></path>',globe:'<circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line><path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"></path>',grid:'<rect x="3" y="3" width="7" height="7"></rect><rect x="14" y="3" width="7" height="7"></rect><rect x="14" y="14" width="7" height="7"></rect><rect x="3" y="14" width="7" height="7"></rect>',"hard-drive":'<line x1="22" y1="12" x2="2" y2="12"></line><path d="M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"></path><line x1="6" y1="16" x2="6.01" y2="16"></line><line x1="10" y1="16" x2="10.01" y2="16"></line>',hash:'<line x1="4" y1="9" x2="20" y2="9"></line><line x1="4" y1="15" x2="20" y2="15"></line><line x1="10" y1="3" x2="8" y2="21"></line><line x1="16" y1="3" x2="14" y2="21"></line>',headphones:'<path d="M3 18v-6a9 9 0 0 1 18 0v6"></path><path d="M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z"></path>',heart:'<path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>',"help-circle":'<circle cx="12" cy="12" r="10"></circle><path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path><line x1="12" y1="17" x2="12.01" y2="17"></line>',hexagon:'<path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path>',home:'<path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path><polyline points="9 22 9 12 15 12 15 22"></polyline>',image:'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><circle cx="8.5" cy="8.5" r="1.5"></circle><polyline points="21 15 16 10 5 21"></polyline>',inbox:'<polyline points="22 12 16 12 14 15 10 15 8 12 2 12"></polyline><path d="M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"></path>',info:'<circle cx="12" cy="12" r="10"></circle><line x1="12" y1="16" x2="12" y2="12"></line><line x1="12" y1="8" x2="12.01" y2="8"></line>',instagram:'<rect x="2" y="2" width="20" height="20" rx="5" ry="5"></rect><path d="M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"></path><line x1="17.5" y1="6.5" x2="17.51" y2="6.5"></line>',italic:'<line x1="19" y1="4" x2="10" y2="4"></line><line x1="14" y1="20" x2="5" y2="20"></line><line x1="15" y1="4" x2="9" y2="20"></line>',key:'<path d="M21 2l-2 2m-7.61 7.61a5.5 5.5 0 1 1-7.778 7.778 5.5 5.5 0 0 1 7.777-7.777zm0 0L15.5 7.5m0 0l3 3L22 7l-3-3m-3.5 3.5L19 4"></path>',layers:'<polygon points="12 2 2 7 12 12 22 7 12 2"></polygon><polyline points="2 17 12 22 22 17"></polyline><polyline points="2 12 12 17 22 12"></polyline>',layout:'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="3" y1="9" x2="21" y2="9"></line><line x1="9" y1="21" x2="9" y2="9"></line>',"life-buoy":'<circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="4"></circle><line x1="4.93" y1="4.93" x2="9.17" y2="9.17"></line><line x1="14.83" y1="14.83" x2="19.07" y2="19.07"></line><line x1="14.83" y1="9.17" x2="19.07" y2="4.93"></line><line x1="14.83" y1="9.17" x2="18.36" y2="5.64"></line><line x1="4.93" y1="19.07" x2="9.17" y2="14.83"></line>',"link-2":'<path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3"></path><line x1="8" y1="12" x2="16" y2="12"></line>',link:'<path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path><path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>',linkedin:'<path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path><rect x="2" y="9" width="4" height="12"></rect><circle cx="4" cy="4" r="2"></circle>',list:'<line x1="8" y1="6" x2="21" y2="6"></line><line x1="8" y1="12" x2="21" y2="12"></line><line x1="8" y1="18" x2="21" y2="18"></line><line x1="3" y1="6" x2="3.01" y2="6"></line><line x1="3" y1="12" x2="3.01" y2="12"></line><line x1="3" y1="18" x2="3.01" y2="18"></line>',loader:'<line x1="12" y1="2" x2="12" y2="6"></line><line x1="12" y1="18" x2="12" y2="22"></line><line x1="4.93" y1="4.93" x2="7.76" y2="7.76"></line><line x1="16.24" y1="16.24" x2="19.07" y2="19.07"></line><line x1="2" y1="12" x2="6" y2="12"></line><line x1="18" y1="12" x2="22" y2="12"></line><line x1="4.93" y1="19.07" x2="7.76" y2="16.24"></line><line x1="16.24" y1="7.76" x2="19.07" y2="4.93"></line>',lock:'<rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect><path d="M7 11V7a5 5 0 0 1 10 0v4"></path>',"log-in":'<path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"></path><polyline points="10 17 15 12 10 7"></polyline><line x1="15" y1="12" x2="3" y2="12"></line>',"log-out":'<path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path><polyline points="16 17 21 12 16 7"></polyline><line x1="21" y1="12" x2="9" y2="12"></line>',mail:'<path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path><polyline points="22,6 12,13 2,6"></polyline>',"map-pin":'<path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path><circle cx="12" cy="10" r="3"></circle>',map:'<polygon points="1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6"></polygon><line x1="8" y1="2" x2="8" y2="18"></line><line x1="16" y1="6" x2="16" y2="22"></line>',"maximize-2":'<polyline points="15 3 21 3 21 9"></polyline><polyline points="9 21 3 21 3 15"></polyline><line x1="21" y1="3" x2="14" y2="10"></line><line x1="3" y1="21" x2="10" y2="14"></line>',maximize:'<path d="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"></path>',meh:'<circle cx="12" cy="12" r="10"></circle><line x1="8" y1="15" x2="16" y2="15"></line><line x1="9" y1="9" x2="9.01" y2="9"></line><line x1="15" y1="9" x2="15.01" y2="9"></line>',menu:'<line x1="3" y1="12" x2="21" y2="12"></line><line x1="3" y1="6" x2="21" y2="6"></line><line x1="3" y1="18" x2="21" y2="18"></line>',"message-circle":'<path d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"></path>',"message-square":'<path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>',"mic-off":'<line x1="1" y1="1" x2="23" y2="23"></line><path d="M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6"></path><path d="M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23"></path><line x1="12" y1="19" x2="12" y2="23"></line><line x1="8" y1="23" x2="16" y2="23"></line>',mic:'<path d="M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"></path><path d="M19 10v2a7 7 0 0 1-14 0v-2"></path><line x1="12" y1="19" x2="12" y2="23"></line><line x1="8" y1="23" x2="16" y2="23"></line>',"minimize-2":'<polyline points="4 14 10 14 10 20"></polyline><polyline points="20 10 14 10 14 4"></polyline><line x1="14" y1="10" x2="21" y2="3"></line><line x1="3" y1="21" x2="10" y2="14"></line>',minimize:'<path d="M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3"></path>',"minus-circle":'<circle cx="12" cy="12" r="10"></circle><line x1="8" y1="12" x2="16" y2="12"></line>',"minus-square":'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="8" y1="12" x2="16" y2="12"></line>',minus:'<line x1="5" y1="12" x2="19" y2="12"></line>',monitor:'<rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect><line x1="8" y1="21" x2="16" y2="21"></line><line x1="12" y1="17" x2="12" y2="21"></line>',moon:'<path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>',"more-horizontal":'<circle cx="12" cy="12" r="1"></circle><circle cx="19" cy="12" r="1"></circle><circle cx="5" cy="12" r="1"></circle>',"more-vertical":'<circle cx="12" cy="12" r="1"></circle><circle cx="12" cy="5" r="1"></circle><circle cx="12" cy="19" r="1"></circle>',"mouse-pointer":'<path d="M3 3l7.07 16.97 2.51-7.39 7.39-2.51L3 3z"></path><path d="M13 13l6 6"></path>',move:'<polyline points="5 9 2 12 5 15"></polyline><polyline points="9 5 12 2 15 5"></polyline><polyline points="15 19 12 22 9 19"></polyline><polyline points="19 9 22 12 19 15"></polyline><line x1="2" y1="12" x2="22" y2="12"></line><line x1="12" y1="2" x2="12" y2="22"></line>',music:'<path d="M9 18V5l12-2v13"></path><circle cx="6" cy="18" r="3"></circle><circle cx="18" cy="16" r="3"></circle>',"navigation-2":'<polygon points="12 2 19 21 12 17 5 21 12 2"></polygon>',navigation:'<polygon points="3 11 22 2 13 21 11 13 3 11"></polygon>',octagon:'<polygon points="7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"></polygon>',package:'<line x1="16.5" y1="9.4" x2="7.5" y2="4.21"></line><path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path><polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline><line x1="12" y1="22.08" x2="12" y2="12"></line>',paperclip:'<path d="M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48"></path>',"pause-circle":'<circle cx="12" cy="12" r="10"></circle><line x1="10" y1="15" x2="10" y2="9"></line><line x1="14" y1="15" x2="14" y2="9"></line>',pause:'<rect x="6" y="4" width="4" height="16"></rect><rect x="14" y="4" width="4" height="16"></rect>',"pen-tool":'<path d="M12 19l7-7 3 3-7 7-3-3z"></path><path d="M18 13l-1.5-7.5L2 2l3.5 14.5L13 18l5-5z"></path><path d="M2 2l7.586 7.586"></path><circle cx="11" cy="11" r="2"></circle>',percent:'<line x1="19" y1="5" x2="5" y2="19"></line><circle cx="6.5" cy="6.5" r="2.5"></circle><circle cx="17.5" cy="17.5" r="2.5"></circle>',"phone-call":'<path d="M15.05 5A5 5 0 0 1 19 8.95M15.05 1A9 9 0 0 1 23 8.94m-1 7.98v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',"phone-forwarded":'<polyline points="19 1 23 5 19 9"></polyline><line x1="15" y1="5" x2="23" y2="5"></line><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',"phone-incoming":'<polyline points="16 2 16 8 22 8"></polyline><line x1="23" y1="1" x2="16" y2="8"></line><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',"phone-missed":'<line x1="23" y1="1" x2="17" y2="7"></line><line x1="17" y1="1" x2="23" y2="7"></line><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',"phone-off":'<path d="M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91"></path><line x1="23" y1="1" x2="1" y2="23"></line>',"phone-outgoing":'<polyline points="23 7 23 1 17 1"></polyline><line x1="16" y1="8" x2="23" y2="1"></line><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',phone:'<path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',"pie-chart":'<path d="M21.21 15.89A10 10 0 1 1 8 2.83"></path><path d="M22 12A10 10 0 0 0 12 2v10z"></path>',"play-circle":'<circle cx="12" cy="12" r="10"></circle><polygon points="10 8 16 12 10 16 10 8"></polygon>',play:'<polygon points="5 3 19 12 5 21 5 3"></polygon>',"plus-circle":'<circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="16"></line><line x1="8" y1="12" x2="16" y2="12"></line>',"plus-square":'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="12" y1="8" x2="12" y2="16"></line><line x1="8" y1="12" x2="16" y2="12"></line>',plus:'<line x1="12" y1="5" x2="12" y2="19"></line><line x1="5" y1="12" x2="19" y2="12"></line>',pocket:'<path d="M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z"></path><polyline points="8 10 12 14 16 10"></polyline>',power:'<path d="M18.36 6.64a9 9 0 1 1-12.73 0"></path><line x1="12" y1="2" x2="12" y2="12"></line>',printer:'<polyline points="6 9 6 2 18 2 18 9"></polyline><path d="M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"></path><rect x="6" y="14" width="12" height="8"></rect>',radio:'<circle cx="12" cy="12" r="2"></circle><path d="M16.24 7.76a6 6 0 0 1 0 8.49m-8.48-.01a6 6 0 0 1 0-8.49m11.31-2.82a10 10 0 0 1 0 14.14m-14.14 0a10 10 0 0 1 0-14.14"></path>',"refresh-ccw":'<polyline points="1 4 1 10 7 10"></polyline><polyline points="23 20 23 14 17 14"></polyline><path d="M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15"></path>',"refresh-cw":'<polyline points="23 4 23 10 17 10"></polyline><polyline points="1 20 1 14 7 14"></polyline><path d="M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15"></path>',repeat:'<polyline points="17 1 21 5 17 9"></polyline><path d="M3 11V9a4 4 0 0 1 4-4h14"></path><polyline points="7 23 3 19 7 15"></polyline><path d="M21 13v2a4 4 0 0 1-4 4H3"></path>',rewind:'<polygon points="11 19 2 12 11 5 11 19"></polygon><polygon points="22 19 13 12 22 5 22 19"></polygon>',"rotate-ccw":'<polyline points="1 4 1 10 7 10"></polyline><path d="M3.51 15a9 9 0 1 0 2.13-9.36L1 10"></path>',"rotate-cw":'<polyline points="23 4 23 10 17 10"></polyline><path d="M20.49 15a9 9 0 1 1-2.12-9.36L23 10"></path>',rss:'<path d="M4 11a9 9 0 0 1 9 9"></path><path d="M4 4a16 16 0 0 1 16 16"></path><circle cx="5" cy="19" r="1"></circle>',save:'<path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path><polyline points="17 21 17 13 7 13 7 21"></polyline><polyline points="7 3 7 8 15 8"></polyline>',scissors:'<circle cx="6" cy="6" r="3"></circle><circle cx="6" cy="18" r="3"></circle><line x1="20" y1="4" x2="8.12" y2="15.88"></line><line x1="14.47" y1="14.48" x2="20" y2="20"></line><line x1="8.12" y1="8.12" x2="12" y2="12"></line>',search:'<circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line>',send:'<line x1="22" y1="2" x2="11" y2="13"></line><polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>',server:'<rect x="2" y="2" width="20" height="8" rx="2" ry="2"></rect><rect x="2" y="14" width="20" height="8" rx="2" ry="2"></rect><line x1="6" y1="6" x2="6.01" y2="6"></line><line x1="6" y1="18" x2="6.01" y2="18"></line>',settings:'<circle cx="12" cy="12" r="3"></circle><path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"></path>',"share-2":'<circle cx="18" cy="5" r="3"></circle><circle cx="6" cy="12" r="3"></circle><circle cx="18" cy="19" r="3"></circle><line x1="8.59" y1="13.51" x2="15.42" y2="17.49"></line><line x1="15.41" y1="6.51" x2="8.59" y2="10.49"></line>',share:'<path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"></path><polyline points="16 6 12 2 8 6"></polyline><line x1="12" y1="2" x2="12" y2="15"></line>',"shield-off":'<path d="M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18"></path><path d="M4.73 4.73L4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38"></path><line x1="1" y1="1" x2="23" y2="23"></line>',shield:'<path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path>',"shopping-bag":'<path d="M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"></path><line x1="3" y1="6" x2="21" y2="6"></line><path d="M16 10a4 4 0 0 1-8 0"></path>',"shopping-cart":'<circle cx="9" cy="21" r="1"></circle><circle cx="20" cy="21" r="1"></circle><path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>',shuffle:'<polyline points="16 3 21 3 21 8"></polyline><line x1="4" y1="20" x2="21" y2="3"></line><polyline points="21 16 21 21 16 21"></polyline><line x1="15" y1="15" x2="21" y2="21"></line><line x1="4" y1="4" x2="9" y2="9"></line>',sidebar:'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="9" y1="3" x2="9" y2="21"></line>',"skip-back":'<polygon points="19 20 9 12 19 4 19 20"></polygon><line x1="5" y1="19" x2="5" y2="5"></line>',"skip-forward":'<polygon points="5 4 15 12 5 20 5 4"></polygon><line x1="19" y1="5" x2="19" y2="19"></line>',slack:'<path d="M14.5 10c-.83 0-1.5-.67-1.5-1.5v-5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5z"></path><path d="M20.5 10H19V8.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"></path><path d="M9.5 14c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5S8 21.33 8 20.5v-5c0-.83.67-1.5 1.5-1.5z"></path><path d="M3.5 14H5v1.5c0 .83-.67 1.5-1.5 1.5S2 16.33 2 15.5 2.67 14 3.5 14z"></path><path d="M14 14.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-5c-.83 0-1.5-.67-1.5-1.5z"></path><path d="M15.5 19H14v1.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"></path><path d="M10 9.5C10 8.67 9.33 8 8.5 8h-5C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11h5c.83 0 1.5-.67 1.5-1.5z"></path><path d="M8.5 5H10V3.5C10 2.67 9.33 2 8.5 2S7 2.67 7 3.5 7.67 5 8.5 5z"></path>',slash:'<circle cx="12" cy="12" r="10"></circle><line x1="4.93" y1="4.93" x2="19.07" y2="19.07"></line>',sliders:'<line x1="4" y1="21" x2="4" y2="14"></line><line x1="4" y1="10" x2="4" y2="3"></line><line x1="12" y1="21" x2="12" y2="12"></line><line x1="12" y1="8" x2="12" y2="3"></line><line x1="20" y1="21" x2="20" y2="16"></line><line x1="20" y1="12" x2="20" y2="3"></line><line x1="1" y1="14" x2="7" y2="14"></line><line x1="9" y1="8" x2="15" y2="8"></line><line x1="17" y1="16" x2="23" y2="16"></line>',smartphone:'<rect x="5" y="2" width="14" height="20" rx="2" ry="2"></rect><line x1="12" y1="18" x2="12.01" y2="18"></line>',smile:'<circle cx="12" cy="12" r="10"></circle><path d="M8 14s1.5 2 4 2 4-2 4-2"></path><line x1="9" y1="9" x2="9.01" y2="9"></line><line x1="15" y1="9" x2="15.01" y2="9"></line>',speaker:'<rect x="4" y="2" width="16" height="20" rx="2" ry="2"></rect><circle cx="12" cy="14" r="4"></circle><line x1="12" y1="6" x2="12.01" y2="6"></line>',square:'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>',star:'<polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>',"stop-circle":'<circle cx="12" cy="12" r="10"></circle><rect x="9" y="9" width="6" height="6"></rect>',sun:'<circle cx="12" cy="12" r="5"></circle><line x1="12" y1="1" x2="12" y2="3"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line><line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line><line x1="1" y1="12" x2="3" y2="12"></line><line x1="21" y1="12" x2="23" y2="12"></line><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line><line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>',sunrise:'<path d="M17 18a5 5 0 0 0-10 0"></path><line x1="12" y1="2" x2="12" y2="9"></line><line x1="4.22" y1="10.22" x2="5.64" y2="11.64"></line><line x1="1" y1="18" x2="3" y2="18"></line><line x1="21" y1="18" x2="23" y2="18"></line><line x1="18.36" y1="11.64" x2="19.78" y2="10.22"></line><line x1="23" y1="22" x2="1" y2="22"></line><polyline points="8 6 12 2 16 6"></polyline>',sunset:'<path d="M17 18a5 5 0 0 0-10 0"></path><line x1="12" y1="9" x2="12" y2="2"></line><line x1="4.22" y1="10.22" x2="5.64" y2="11.64"></line><line x1="1" y1="18" x2="3" y2="18"></line><line x1="21" y1="18" x2="23" y2="18"></line><line x1="18.36" y1="11.64" x2="19.78" y2="10.22"></line><line x1="23" y1="22" x2="1" y2="22"></line><polyline points="16 5 12 9 8 5"></polyline>',table:'<path d="M9 3H5a2 2 0 0 0-2 2v4m6-6h10a2 2 0 0 1 2 2v4M9 3v18m0 0h10a2 2 0 0 0 2-2V9M9 21H5a2 2 0 0 1-2-2V9m0 0h18"></path>',tablet:'<rect x="4" y="2" width="16" height="20" rx="2" ry="2"></rect><line x1="12" y1="18" x2="12.01" y2="18"></line>',tag:'<path d="M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"></path><line x1="7" y1="7" x2="7.01" y2="7"></line>',target:'<circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="6"></circle><circle cx="12" cy="12" r="2"></circle>',terminal:'<polyline points="4 17 10 11 4 5"></polyline><line x1="12" y1="19" x2="20" y2="19"></line>',thermometer:'<path d="M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z"></path>',"thumbs-down":'<path d="M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17"></path>',"thumbs-up":'<path d="M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3"></path>',"toggle-left":'<rect x="1" y="5" width="22" height="14" rx="7" ry="7"></rect><circle cx="8" cy="12" r="3"></circle>',"toggle-right":'<rect x="1" y="5" width="22" height="14" rx="7" ry="7"></rect><circle cx="16" cy="12" r="3"></circle>',tool:'<path d="M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z"></path>',"trash-2":'<polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><line x1="10" y1="11" x2="10" y2="17"></line><line x1="14" y1="11" x2="14" y2="17"></line>',trash:'<polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>',trello:'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><rect x="7" y="7" width="3" height="9"></rect><rect x="14" y="7" width="3" height="5"></rect>',"trending-down":'<polyline points="23 18 13.5 8.5 8.5 13.5 1 6"></polyline><polyline points="17 18 23 18 23 12"></polyline>',"trending-up":'<polyline points="23 6 13.5 15.5 8.5 10.5 1 18"></polyline><polyline points="17 6 23 6 23 12"></polyline>',triangle:'<path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>',truck:'<rect x="1" y="3" width="15" height="13"></rect><polygon points="16 8 20 8 23 11 23 16 16 16 16 8"></polygon><circle cx="5.5" cy="18.5" r="2.5"></circle><circle cx="18.5" cy="18.5" r="2.5"></circle>',tv:'<rect x="2" y="7" width="20" height="15" rx="2" ry="2"></rect><polyline points="17 2 12 7 7 2"></polyline>',twitch:'<path d="M21 2H3v16h5v4l4-4h5l4-4V2zM11 11V7M16 11V7"></path>',twitter:'<path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"></path>',type:'<polyline points="4 7 4 4 20 4 20 7"></polyline><line x1="9" y1="20" x2="15" y2="20"></line><line x1="12" y1="4" x2="12" y2="20"></line>',umbrella:'<path d="M23 12a11.05 11.05 0 0 0-22 0zm-5 7a3 3 0 0 1-6 0v-7"></path>',underline:'<path d="M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3"></path><line x1="4" y1="21" x2="20" y2="21"></line>',unlock:'<rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect><path d="M7 11V7a5 5 0 0 1 9.9-1"></path>',"upload-cloud":'<polyline points="16 16 12 12 8 16"></polyline><line x1="12" y1="12" x2="12" y2="21"></line><path d="M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3"></path><polyline points="16 16 12 12 8 16"></polyline>',upload:'<path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="17 8 12 3 7 8"></polyline><line x1="12" y1="3" x2="12" y2="15"></line>',"user-check":'<path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="8.5" cy="7" r="4"></circle><polyline points="17 11 19 13 23 9"></polyline>',"user-minus":'<path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="8.5" cy="7" r="4"></circle><line x1="23" y1="11" x2="17" y2="11"></line>',"user-plus":'<path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="8.5" cy="7" r="4"></circle><line x1="20" y1="8" x2="20" y2="14"></line><line x1="23" y1="11" x2="17" y2="11"></line>',"user-x":'<path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="8.5" cy="7" r="4"></circle><line x1="18" y1="8" x2="23" y2="13"></line><line x1="23" y1="8" x2="18" y2="13"></line>',user:'<path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle>',users:'<path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="9" cy="7" r="4"></circle><path d="M23 21v-2a4 4 0 0 0-3-3.87"></path><path d="M16 3.13a4 4 0 0 1 0 7.75"></path>',"video-off":'<path d="M16 16v1a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2m5.66 0H14a2 2 0 0 1 2 2v3.34l1 1L23 7v10"></path><line x1="1" y1="1" x2="23" y2="23"></line>',video:'<polygon points="23 7 16 12 23 17 23 7"></polygon><rect x="1" y="5" width="15" height="14" rx="2" ry="2"></rect>',voicemail:'<circle cx="5.5" cy="11.5" r="4.5"></circle><circle cx="18.5" cy="11.5" r="4.5"></circle><line x1="5.5" y1="16" x2="18.5" y2="16"></line>',"volume-1":'<polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon><path d="M15.54 8.46a5 5 0 0 1 0 7.07"></path>',"volume-2":'<polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon><path d="M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07"></path>',"volume-x":'<polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon><line x1="23" y1="9" x2="17" y2="15"></line><line x1="17" y1="9" x2="23" y2="15"></line>',volume:'<polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon>',watch:'<circle cx="12" cy="12" r="7"></circle><polyline points="12 9 12 12 13.5 13.5"></polyline><path d="M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83"></path>',"wifi-off":'<line x1="1" y1="1" x2="23" y2="23"></line><path d="M16.72 11.06A10.94 10.94 0 0 1 19 12.55"></path><path d="M5 12.55a10.94 10.94 0 0 1 5.17-2.39"></path><path d="M10.71 5.05A16 16 0 0 1 22.58 9"></path><path d="M1.42 9a15.91 15.91 0 0 1 4.7-2.88"></path><path d="M8.53 16.11a6 6 0 0 1 6.95 0"></path><line x1="12" y1="20" x2="12.01" y2="20"></line>',wifi:'<path d="M5 12.55a11 11 0 0 1 14.08 0"></path><path d="M1.42 9a16 16 0 0 1 21.16 0"></path><path d="M8.53 16.11a6 6 0 0 1 6.95 0"></path><line x1="12" y1="20" x2="12.01" y2="20"></line>',wind:'<path d="M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2"></path>',"x-circle":'<circle cx="12" cy="12" r="10"></circle><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line>',"x-octagon":'<polygon points="7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"></polygon><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line>',"x-square":'<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="9" y1="9" x2="15" y2="15"></line><line x1="15" y1="9" x2="9" y2="15"></line>',x:'<line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line>',youtube:'<path d="M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z"></path><polygon points="9.75 15.02 15.5 11.75 9.75 8.48 9.75 15.02"></polygon>',"zap-off":'<polyline points="12.41 6.75 13 2 10.57 4.92"></polyline><polyline points="18.57 12.91 21 10 15.66 10"></polyline><polyline points="8 8 3 14 12 14 11 22 16 16"></polyline><line x1="1" y1="1" x2="23" y2="23"></line>',zap:'<polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"></polygon>',"zoom-in":'<circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line><line x1="11" y1="8" x2="11" y2="14"></line><line x1="8" y1="11" x2="14" y2="11"></line>',"zoom-out":'<circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line><line x1="8" y1="11" x2="14" y2="11"></line>'}},"./node_modules/classnames/dedupe.js":function(e,n,t){var o;!function(){"use strict";var t=function(){function e(){}function n(e,n){for(var t=n.length,o=0;o<t;++o)r(e,n[o])}e.prototype=Object.create(null);var t={}.hasOwnProperty,o=/\s+/;function r(e,r){if(r){var i=typeof r;"string"===i?function(e,n){for(var t=n.split(o),r=t.length,i=0;i<r;++i)e[t[i]]=!0}(e,r):Array.isArray(r)?n(e,r):"object"===i?function(e,n){for(var o in n)t.call(n,o)&&(e[o]=!!n[o])}(e,r):"number"===i&&function(e,n){e[n]=!0}(e,r)}}return function(){for(var t=arguments.length,o=Array(t),r=0;r<t;r++)o[r]=arguments[r];var i=new e;n(i,o);var l=[];for(var a in i)i[a]&&l.push(a);return l.join(" ")}}();void 0!==e&&e.exports?e.exports=t:void 0===(o=function(){return t}.apply(n,[]))||(e.exports=o)}()},"./node_modules/core-js/es/array/from.js":function(e,n,t){t("./node_modules/core-js/modules/es.string.iterator.js"),t("./node_modules/core-js/modules/es.array.from.js");var o=t("./node_modules/core-js/internals/path.js");e.exports=o.Array.from},"./node_modules/core-js/internals/a-function.js":function(e,n){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},"./node_modules/core-js/internals/an-object.js":function(e,n,t){var o=t("./node_modules/core-js/internals/is-object.js");e.exports=function(e){if(!o(e))throw TypeError(String(e)+" is not an object");return e}},"./node_modules/core-js/internals/array-from.js":function(e,n,t){"use strict";var o=t("./node_modules/core-js/internals/bind-context.js"),r=t("./node_modules/core-js/internals/to-object.js"),i=t("./node_modules/core-js/internals/call-with-safe-iteration-closing.js"),l=t("./node_modules/core-js/internals/is-array-iterator-method.js"),a=t("./node_modules/core-js/internals/to-length.js"),s=t("./node_modules/core-js/internals/create-property.js"),c=t("./node_modules/core-js/internals/get-iterator-method.js");e.exports=function(e){var n,t,d,p,u=r(e),y="function"==typeof this?this:Array,h=arguments.length,A=h>1?arguments[1]:void 0,m=void 0!==A,f=0,g=c(u);if(m&&(A=o(A,h>2?arguments[2]:void 0,2)),null==g||y==Array&&l(g))for(t=new y(n=a(u.length));n>f;f++)s(t,f,m?A(u[f],f):u[f]);else for(p=g.call(u),t=new y;!(d=p.next()).done;f++)s(t,f,m?i(p,A,[d.value,f],!0):d.value);return t.length=f,t}},"./node_modules/core-js/internals/array-includes.js":function(e,n,t){var o=t("./node_modules/core-js/internals/to-indexed-object.js"),r=t("./node_modules/core-js/internals/to-length.js"),i=t("./node_modules/core-js/internals/to-absolute-index.js");e.exports=function(e){return function(n,t,l){var a,s=o(n),c=r(s.length),d=i(l,c);if(e&&t!=t){for(;c>d;)if((a=s[d++])!=a)return!0}else for(;c>d;d++)if((e||d in s)&&s[d]===t)return e||d||0;return!e&&-1}}},"./node_modules/core-js/internals/bind-context.js":function(e,n,t){var o=t("./node_modules/core-js/internals/a-function.js");e.exports=function(e,n,t){if(o(e),void 0===n)return e;switch(t){case 0:return function(){return e.call(n)};case 1:return function(t){return e.call(n,t)};case 2:return function(t,o){return e.call(n,t,o)};case 3:return function(t,o,r){return e.call(n,t,o,r)}}return function(){return e.apply(n,arguments)}}},"./node_modules/core-js/internals/call-with-safe-iteration-closing.js":function(e,n,t){var o=t("./node_modules/core-js/internals/an-object.js");e.exports=function(e,n,t,r){try{return r?n(o(t)[0],t[1]):n(t)}catch(n){var i=e.return;throw void 0!==i&&o(i.call(e)),n}}},"./node_modules/core-js/internals/check-correctness-of-iteration.js":function(e,n,t){var o=t("./node_modules/core-js/internals/well-known-symbol.js")("iterator"),r=!1;try{var i=0,l={next:function(){return{done:!!i++}},return:function(){r=!0}};l[o]=function(){return this},Array.from(l,(function(){throw 2}))}catch(e){}e.exports=function(e,n){if(!n&&!r)return!1;var t=!1;try{var i={};i[o]=function(){return{next:function(){return{done:t=!0}}}},e(i)}catch(e){}return t}},"./node_modules/core-js/internals/classof-raw.js":function(e,n){var t={}.toString;e.exports=function(e){return t.call(e).slice(8,-1)}},"./node_modules/core-js/internals/classof.js":function(e,n,t){var o=t("./node_modules/core-js/internals/classof-raw.js"),r=t("./node_modules/core-js/internals/well-known-symbol.js")("toStringTag"),i="Arguments"==o(function(){return arguments}());e.exports=function(e){var n,t,l;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(t=function(e,n){try{return e[n]}catch(e){}}(n=Object(e),r))?t:i?o(n):"Object"==(l=o(n))&&"function"==typeof n.callee?"Arguments":l}},"./node_modules/core-js/internals/copy-constructor-properties.js":function(e,n,t){var o=t("./node_modules/core-js/internals/has.js"),r=t("./node_modules/core-js/internals/own-keys.js"),i=t("./node_modules/core-js/internals/object-get-own-property-descriptor.js"),l=t("./node_modules/core-js/internals/object-define-property.js");e.exports=function(e,n){for(var t=r(n),a=l.f,s=i.f,c=0;c<t.length;c++){var d=t[c];o(e,d)||a(e,d,s(n,d))}}},"./node_modules/core-js/internals/correct-prototype-getter.js":function(e,n,t){var o=t("./node_modules/core-js/internals/fails.js");e.exports=!o((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},"./node_modules/core-js/internals/create-iterator-constructor.js":function(e,n,t){"use strict";var o=t("./node_modules/core-js/internals/iterators-core.js").IteratorPrototype,r=t("./node_modules/core-js/internals/object-create.js"),i=t("./node_modules/core-js/internals/create-property-descriptor.js"),l=t("./node_modules/core-js/internals/set-to-string-tag.js"),a=t("./node_modules/core-js/internals/iterators.js"),s=function(){return this};e.exports=function(e,n,t){var c=n+" Iterator";return e.prototype=r(o,{next:i(1,t)}),l(e,c,!1,!0),a[c]=s,e}},"./node_modules/core-js/internals/create-property-descriptor.js":function(e,n){e.exports=function(e,n){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:n}}},"./node_modules/core-js/internals/create-property.js":function(e,n,t){"use strict";var o=t("./node_modules/core-js/internals/to-primitive.js"),r=t("./node_modules/core-js/internals/object-define-property.js"),i=t("./node_modules/core-js/internals/create-property-descriptor.js");e.exports=function(e,n,t){var l=o(n);l in e?r.f(e,l,i(0,t)):e[l]=t}},"./node_modules/core-js/internals/define-iterator.js":function(e,n,t){"use strict";var o=t("./node_modules/core-js/internals/export.js"),r=t("./node_modules/core-js/internals/create-iterator-constructor.js"),i=t("./node_modules/core-js/internals/object-get-prototype-of.js"),l=t("./node_modules/core-js/internals/object-set-prototype-of.js"),a=t("./node_modules/core-js/internals/set-to-string-tag.js"),s=t("./node_modules/core-js/internals/hide.js"),c=t("./node_modules/core-js/internals/redefine.js"),d=t("./node_modules/core-js/internals/well-known-symbol.js"),p=t("./node_modules/core-js/internals/is-pure.js"),u=t("./node_modules/core-js/internals/iterators.js"),y=t("./node_modules/core-js/internals/iterators-core.js"),h=y.IteratorPrototype,A=y.BUGGY_SAFARI_ITERATORS,m=d("iterator"),f="keys",g="values",x="entries",v=function(){return this};e.exports=function(e,n,t,d,y,j,b){r(t,n,d);var C,w,B,k=function(e){if(e===y&&z)return z;if(!A&&e in M)return M[e];switch(e){case f:case g:case x:return function(){return new t(this,e)}}return function(){return new t(this)}},I=n+" Iterator",_=!1,M=e.prototype,E=M[m]||M["@@iterator"]||y&&M[y],z=!A&&E||k(y),L="Array"==n&&M.entries||E;if(L&&(C=i(L.call(new e)),h!==Object.prototype&&C.next&&(p||i(C)===h||(l?l(C,h):"function"!=typeof C[m]&&s(C,m,v)),a(C,I,!0,!0),p&&(u[I]=v))),y==g&&E&&E.name!==g&&(_=!0,z=function(){return E.call(this)}),p&&!b||M[m]===z||s(M,m,z),u[n]=z,y)if(w={values:k(g),keys:j?z:k(f),entries:k(x)},b)for(B in w)(A||_||!(B in M))&&c(M,B,w[B]);else o({target:n,proto:!0,forced:A||_},w);return w}},"./node_modules/core-js/internals/descriptors.js":function(e,n,t){var o=t("./node_modules/core-js/internals/fails.js");e.exports=!o((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},"./node_modules/core-js/internals/document-create-element.js":function(e,n,t){var o=t("./node_modules/core-js/internals/global.js"),r=t("./node_modules/core-js/internals/is-object.js"),i=o.document,l=r(i)&&r(i.createElement);e.exports=function(e){return l?i.createElement(e):{}}},"./node_modules/core-js/internals/enum-bug-keys.js":function(e,n){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},"./node_modules/core-js/internals/export.js":function(e,n,t){var o=t("./node_modules/core-js/internals/global.js"),r=t("./node_modules/core-js/internals/object-get-own-property-descriptor.js").f,i=t("./node_modules/core-js/internals/hide.js"),l=t("./node_modules/core-js/internals/redefine.js"),a=t("./node_modules/core-js/internals/set-global.js"),s=t("./node_modules/core-js/internals/copy-constructor-properties.js"),c=t("./node_modules/core-js/internals/is-forced.js");e.exports=function(e,n){var t,d,p,u,y,h=e.target,A=e.global,m=e.stat;if(t=A?o:m?o[h]||a(h,{}):(o[h]||{}).prototype)for(d in n){if(u=n[d],p=e.noTargetGet?(y=r(t,d))&&y.value:t[d],!c(A?d:h+(m?".":"#")+d,e.forced)&&void 0!==p){if(typeof u==typeof p)continue;s(u,p)}(e.sham||p&&p.sham)&&i(u,"sham",!0),l(t,d,u,e)}}},"./node_modules/core-js/internals/fails.js":function(e,n){e.exports=function(e){try{return!!e()}catch(e){return!0}}},"./node_modules/core-js/internals/function-to-string.js":function(e,n,t){var o=t("./node_modules/core-js/internals/shared.js");e.exports=o("native-function-to-string",Function.toString)},"./node_modules/core-js/internals/get-iterator-method.js":function(e,n,t){var o=t("./node_modules/core-js/internals/classof.js"),r=t("./node_modules/core-js/internals/iterators.js"),i=t("./node_modules/core-js/internals/well-known-symbol.js")("iterator");e.exports=function(e){if(null!=e)return e[i]||e["@@iterator"]||r[o(e)]}},"./node_modules/core-js/internals/global.js":function(e,n,t){(function(n){var t="object",o=function(e){return e&&e.Math==Math&&e};e.exports=o(typeof globalThis==t&&globalThis)||o(typeof window==t&&window)||o(typeof self==t&&self)||o(typeof n==t&&n)||Function("return this")()}).call(this,t("./node_modules/webpack/buildin/global.js"))},"./node_modules/core-js/internals/has.js":function(e,n){var t={}.hasOwnProperty;e.exports=function(e,n){return t.call(e,n)}},"./node_modules/core-js/internals/hidden-keys.js":function(e,n){e.exports={}},"./node_modules/core-js/internals/hide.js":function(e,n,t){var o=t("./node_modules/core-js/internals/descriptors.js"),r=t("./node_modules/core-js/internals/object-define-property.js"),i=t("./node_modules/core-js/internals/create-property-descriptor.js");e.exports=o?function(e,n,t){return r.f(e,n,i(1,t))}:function(e,n,t){return e[n]=t,e}},"./node_modules/core-js/internals/html.js":function(e,n,t){var o=t("./node_modules/core-js/internals/global.js").document;e.exports=o&&o.documentElement},"./node_modules/core-js/internals/ie8-dom-define.js":function(e,n,t){var o=t("./node_modules/core-js/internals/descriptors.js"),r=t("./node_modules/core-js/internals/fails.js"),i=t("./node_modules/core-js/internals/document-create-element.js");e.exports=!o&&!r((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},"./node_modules/core-js/internals/indexed-object.js":function(e,n,t){var o=t("./node_modules/core-js/internals/fails.js"),r=t("./node_modules/core-js/internals/classof-raw.js"),i="".split;e.exports=o((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==r(e)?i.call(e,""):Object(e)}:Object},"./node_modules/core-js/internals/internal-state.js":function(e,n,t){var o,r,i,l=t("./node_modules/core-js/internals/native-weak-map.js"),a=t("./node_modules/core-js/internals/global.js"),s=t("./node_modules/core-js/internals/is-object.js"),c=t("./node_modules/core-js/internals/hide.js"),d=t("./node_modules/core-js/internals/has.js"),p=t("./node_modules/core-js/internals/shared-key.js"),u=t("./node_modules/core-js/internals/hidden-keys.js"),y=a.WeakMap;if(l){var h=new y,A=h.get,m=h.has,f=h.set;o=function(e,n){return f.call(h,e,n),n},r=function(e){return A.call(h,e)||{}},i=function(e){return m.call(h,e)}}else{var g=p("state");u[g]=!0,o=function(e,n){return c(e,g,n),n},r=function(e){return d(e,g)?e[g]:{}},i=function(e){return d(e,g)}}e.exports={set:o,get:r,has:i,enforce:function(e){return i(e)?r(e):o(e,{})},getterFor:function(e){return function(n){var t;if(!s(n)||(t=r(n)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return t}}}},"./node_modules/core-js/internals/is-array-iterator-method.js":function(e,n,t){var o=t("./node_modules/core-js/internals/well-known-symbol.js"),r=t("./node_modules/core-js/internals/iterators.js"),i=o("iterator"),l=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||l[i]===e)}},"./node_modules/core-js/internals/is-forced.js":function(e,n,t){var o=t("./node_modules/core-js/internals/fails.js"),r=/#|\.prototype\./,i=function(e,n){var t=a[l(e)];return t==c||t!=s&&("function"==typeof n?o(n):!!n)},l=i.normalize=function(e){return String(e).replace(r,".").toLowerCase()},a=i.data={},s=i.NATIVE="N",c=i.POLYFILL="P";e.exports=i},"./node_modules/core-js/internals/is-object.js":function(e,n){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},"./node_modules/core-js/internals/is-pure.js":function(e,n){e.exports=!1},"./node_modules/core-js/internals/iterators-core.js":function(e,n,t){"use strict";var o,r,i,l=t("./node_modules/core-js/internals/object-get-prototype-of.js"),a=t("./node_modules/core-js/internals/hide.js"),s=t("./node_modules/core-js/internals/has.js"),c=t("./node_modules/core-js/internals/well-known-symbol.js"),d=t("./node_modules/core-js/internals/is-pure.js"),p=c("iterator"),u=!1;[].keys&&("next"in(i=[].keys())?(r=l(l(i)))!==Object.prototype&&(o=r):u=!0),null==o&&(o={}),d||s(o,p)||a(o,p,(function(){return this})),e.exports={IteratorPrototype:o,BUGGY_SAFARI_ITERATORS:u}},"./node_modules/core-js/internals/iterators.js":function(e,n){e.exports={}},"./node_modules/core-js/internals/native-symbol.js":function(e,n,t){var o=t("./node_modules/core-js/internals/fails.js");e.exports=!!Object.getOwnPropertySymbols&&!o((function(){return!String(Symbol())}))},"./node_modules/core-js/internals/native-weak-map.js":function(e,n,t){var o=t("./node_modules/core-js/internals/global.js"),r=t("./node_modules/core-js/internals/function-to-string.js"),i=o.WeakMap;e.exports="function"==typeof i&&/native code/.test(r.call(i))},"./node_modules/core-js/internals/object-create.js":function(e,n,t){var o=t("./node_modules/core-js/internals/an-object.js"),r=t("./node_modules/core-js/internals/object-define-properties.js"),i=t("./node_modules/core-js/internals/enum-bug-keys.js"),l=t("./node_modules/core-js/internals/hidden-keys.js"),a=t("./node_modules/core-js/internals/html.js"),s=t("./node_modules/core-js/internals/document-create-element.js"),c=t("./node_modules/core-js/internals/shared-key.js")("IE_PROTO"),d="prototype",p=function(){},u=function(){var e,n=s("iframe"),t=i.length,o="script",r="java"+o+":";for(n.style.display="none",a.appendChild(n),n.src=String(r),(e=n.contentWindow.document).open(),e.write("<"+o+">document.F=Object</"+o+">"),e.close(),u=e.F;t--;)delete u[d][i[t]];return u()};e.exports=Object.create||function(e,n){var t;return null!==e?(p[d]=o(e),t=new p,p[d]=null,t[c]=e):t=u(),void 0===n?t:r(t,n)},l[c]=!0},"./node_modules/core-js/internals/object-define-properties.js":function(e,n,t){var o=t("./node_modules/core-js/internals/descriptors.js"),r=t("./node_modules/core-js/internals/object-define-property.js"),i=t("./node_modules/core-js/internals/an-object.js"),l=t("./node_modules/core-js/internals/object-keys.js");e.exports=o?Object.defineProperties:function(e,n){i(e);for(var t,o=l(n),a=o.length,s=0;a>s;)r.f(e,t=o[s++],n[t]);return e}},"./node_modules/core-js/internals/object-define-property.js":function(e,n,t){var o=t("./node_modules/core-js/internals/descriptors.js"),r=t("./node_modules/core-js/internals/ie8-dom-define.js"),i=t("./node_modules/core-js/internals/an-object.js"),l=t("./node_modules/core-js/internals/to-primitive.js"),a=Object.defineProperty;n.f=o?a:function(e,n,t){if(i(e),n=l(n,!0),i(t),r)try{return a(e,n,t)}catch(e){}if("get"in t||"set"in t)throw TypeError("Accessors not supported");return"value"in t&&(e[n]=t.value),e}},"./node_modules/core-js/internals/object-get-own-property-descriptor.js":function(e,n,t){var o=t("./node_modules/core-js/internals/descriptors.js"),r=t("./node_modules/core-js/internals/object-property-is-enumerable.js"),i=t("./node_modules/core-js/internals/create-property-descriptor.js"),l=t("./node_modules/core-js/internals/to-indexed-object.js"),a=t("./node_modules/core-js/internals/to-primitive.js"),s=t("./node_modules/core-js/internals/has.js"),c=t("./node_modules/core-js/internals/ie8-dom-define.js"),d=Object.getOwnPropertyDescriptor;n.f=o?d:function(e,n){if(e=l(e),n=a(n,!0),c)try{return d(e,n)}catch(e){}if(s(e,n))return i(!r.f.call(e,n),e[n])}},"./node_modules/core-js/internals/object-get-own-property-names.js":function(e,n,t){var o=t("./node_modules/core-js/internals/object-keys-internal.js"),r=t("./node_modules/core-js/internals/enum-bug-keys.js").concat("length","prototype");n.f=Object.getOwnPropertyNames||function(e){return o(e,r)}},"./node_modules/core-js/internals/object-get-own-property-symbols.js":function(e,n){n.f=Object.getOwnPropertySymbols},"./node_modules/core-js/internals/object-get-prototype-of.js":function(e,n,t){var o=t("./node_modules/core-js/internals/has.js"),r=t("./node_modules/core-js/internals/to-object.js"),i=t("./node_modules/core-js/internals/shared-key.js"),l=t("./node_modules/core-js/internals/correct-prototype-getter.js"),a=i("IE_PROTO"),s=Object.prototype;e.exports=l?Object.getPrototypeOf:function(e){return e=r(e),o(e,a)?e[a]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?s:null}},"./node_modules/core-js/internals/object-keys-internal.js":function(e,n,t){var o=t("./node_modules/core-js/internals/has.js"),r=t("./node_modules/core-js/internals/to-indexed-object.js"),i=t("./node_modules/core-js/internals/array-includes.js"),l=t("./node_modules/core-js/internals/hidden-keys.js"),a=i(!1);e.exports=function(e,n){var t,i=r(e),s=0,c=[];for(t in i)!o(l,t)&&o(i,t)&&c.push(t);for(;n.length>s;)o(i,t=n[s++])&&(~a(c,t)||c.push(t));return c}},"./node_modules/core-js/internals/object-keys.js":function(e,n,t){var o=t("./node_modules/core-js/internals/object-keys-internal.js"),r=t("./node_modules/core-js/internals/enum-bug-keys.js");e.exports=Object.keys||function(e){return o(e,r)}},"./node_modules/core-js/internals/object-property-is-enumerable.js":function(e,n,t){"use strict";var o={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,i=r&&!o.call({1:2},1);n.f=i?function(e){var n=r(this,e);return!!n&&n.enumerable}:o},"./node_modules/core-js/internals/object-set-prototype-of.js":function(e,n,t){var o=t("./node_modules/core-js/internals/validate-set-prototype-of-arguments.js");e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,n=!1,t={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(t,[]),n=t instanceof Array}catch(e){}return function(t,r){return o(t,r),n?e.call(t,r):t.__proto__=r,t}}():void 0)},"./node_modules/core-js/internals/own-keys.js":function(e,n,t){var o=t("./node_modules/core-js/internals/global.js"),r=t("./node_modules/core-js/internals/object-get-own-property-names.js"),i=t("./node_modules/core-js/internals/object-get-own-property-symbols.js"),l=t("./node_modules/core-js/internals/an-object.js"),a=o.Reflect;e.exports=a&&a.ownKeys||function(e){var n=r.f(l(e)),t=i.f;return t?n.concat(t(e)):n}},"./node_modules/core-js/internals/path.js":function(e,n,t){e.exports=t("./node_modules/core-js/internals/global.js")},"./node_modules/core-js/internals/redefine.js":function(e,n,t){var o=t("./node_modules/core-js/internals/global.js"),r=t("./node_modules/core-js/internals/shared.js"),i=t("./node_modules/core-js/internals/hide.js"),l=t("./node_modules/core-js/internals/has.js"),a=t("./node_modules/core-js/internals/set-global.js"),s=t("./node_modules/core-js/internals/function-to-string.js"),c=t("./node_modules/core-js/internals/internal-state.js"),d=c.get,p=c.enforce,u=String(s).split("toString");r("inspectSource",(function(e){return s.call(e)})),(e.exports=function(e,n,t,r){var s=!!r&&!!r.unsafe,c=!!r&&!!r.enumerable,d=!!r&&!!r.noTargetGet;"function"==typeof t&&("string"!=typeof n||l(t,"name")||i(t,"name",n),p(t).source=u.join("string"==typeof n?n:"")),e!==o?(s?!d&&e[n]&&(c=!0):delete e[n],c?e[n]=t:i(e,n,t)):c?e[n]=t:a(n,t)})(Function.prototype,"toString",(function(){return"function"==typeof this&&d(this).source||s.call(this)}))},"./node_modules/core-js/internals/require-object-coercible.js":function(e,n){e.exports=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e}},"./node_modules/core-js/internals/set-global.js":function(e,n,t){var o=t("./node_modules/core-js/internals/global.js"),r=t("./node_modules/core-js/internals/hide.js");e.exports=function(e,n){try{r(o,e,n)}catch(t){o[e]=n}return n}},"./node_modules/core-js/internals/set-to-string-tag.js":function(e,n,t){var o=t("./node_modules/core-js/internals/object-define-property.js").f,r=t("./node_modules/core-js/internals/has.js"),i=t("./node_modules/core-js/internals/well-known-symbol.js")("toStringTag");e.exports=function(e,n,t){e&&!r(e=t?e:e.prototype,i)&&o(e,i,{configurable:!0,value:n})}},"./node_modules/core-js/internals/shared-key.js":function(e,n,t){var o=t("./node_modules/core-js/internals/shared.js"),r=t("./node_modules/core-js/internals/uid.js"),i=o("keys");e.exports=function(e){return i[e]||(i[e]=r(e))}},"./node_modules/core-js/internals/shared.js":function(e,n,t){var o=t("./node_modules/core-js/internals/global.js"),r=t("./node_modules/core-js/internals/set-global.js"),i=t("./node_modules/core-js/internals/is-pure.js"),l="__core-js_shared__",a=o[l]||r(l,{});(e.exports=function(e,n){return a[e]||(a[e]=void 0!==n?n:{})})("versions",[]).push({version:"3.1.3",mode:i?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},"./node_modules/core-js/internals/string-at.js":function(e,n,t){var o=t("./node_modules/core-js/internals/to-integer.js"),r=t("./node_modules/core-js/internals/require-object-coercible.js");e.exports=function(e,n,t){var i,l,a=String(r(e)),s=o(n),c=a.length;return s<0||s>=c?t?"":void 0:(i=a.charCodeAt(s))<55296||i>56319||s+1===c||(l=a.charCodeAt(s+1))<56320||l>57343?t?a.charAt(s):i:t?a.slice(s,s+2):l-56320+(i-55296<<10)+65536}},"./node_modules/core-js/internals/to-absolute-index.js":function(e,n,t){var o=t("./node_modules/core-js/internals/to-integer.js"),r=Math.max,i=Math.min;e.exports=function(e,n){var t=o(e);return t<0?r(t+n,0):i(t,n)}},"./node_modules/core-js/internals/to-indexed-object.js":function(e,n,t){var o=t("./node_modules/core-js/internals/indexed-object.js"),r=t("./node_modules/core-js/internals/require-object-coercible.js");e.exports=function(e){return o(r(e))}},"./node_modules/core-js/internals/to-integer.js":function(e,n){var t=Math.ceil,o=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?o:t)(e)}},"./node_modules/core-js/internals/to-length.js":function(e,n,t){var o=t("./node_modules/core-js/internals/to-integer.js"),r=Math.min;e.exports=function(e){return e>0?r(o(e),9007199254740991):0}},"./node_modules/core-js/internals/to-object.js":function(e,n,t){var o=t("./node_modules/core-js/internals/require-object-coercible.js");e.exports=function(e){return Object(o(e))}},"./node_modules/core-js/internals/to-primitive.js":function(e,n,t){var o=t("./node_modules/core-js/internals/is-object.js");e.exports=function(e,n){if(!o(e))return e;var t,r;if(n&&"function"==typeof(t=e.toString)&&!o(r=t.call(e)))return r;if("function"==typeof(t=e.valueOf)&&!o(r=t.call(e)))return r;if(!n&&"function"==typeof(t=e.toString)&&!o(r=t.call(e)))return r;throw TypeError("Can't convert object to primitive value")}},"./node_modules/core-js/internals/uid.js":function(e,n){var t=0,o=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++t+o).toString(36))}},"./node_modules/core-js/internals/validate-set-prototype-of-arguments.js":function(e,n,t){var o=t("./node_modules/core-js/internals/is-object.js"),r=t("./node_modules/core-js/internals/an-object.js");e.exports=function(e,n){if(r(e),!o(n)&&null!==n)throw TypeError("Can't set "+String(n)+" as a prototype")}},"./node_modules/core-js/internals/well-known-symbol.js":function(e,n,t){var o=t("./node_modules/core-js/internals/global.js"),r=t("./node_modules/core-js/internals/shared.js"),i=t("./node_modules/core-js/internals/uid.js"),l=t("./node_modules/core-js/internals/native-symbol.js"),a=o.Symbol,s=r("wks");e.exports=function(e){return s[e]||(s[e]=l&&a[e]||(l?a:i)("Symbol."+e))}},"./node_modules/core-js/modules/es.array.from.js":function(e,n,t){var o=t("./node_modules/core-js/internals/export.js"),r=t("./node_modules/core-js/internals/array-from.js");o({target:"Array",stat:!0,forced:!t("./node_modules/core-js/internals/check-correctness-of-iteration.js")((function(e){Array.from(e)}))},{from:r})},"./node_modules/core-js/modules/es.string.iterator.js":function(e,n,t){"use strict";var o=t("./node_modules/core-js/internals/string-at.js"),r=t("./node_modules/core-js/internals/internal-state.js"),i=t("./node_modules/core-js/internals/define-iterator.js"),l="String Iterator",a=r.set,s=r.getterFor(l);i(String,"String",(function(e){a(this,{type:l,string:String(e),index:0})}),(function(){var e,n=s(this),t=n.string,r=n.index;return r>=t.length?{value:void 0,done:!0}:(e=o(t,r,!0),n.index+=e.length,{value:e,done:!1})}))},"./node_modules/webpack/buildin/global.js":function(e,n){var t;t=function(){return this}();try{t=t||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(t=window)}e.exports=t},"./src/default-attrs.json":function(e){e.exports={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":2,"stroke-linecap":"round","stroke-linejoin":"round"}},"./src/icon.js":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},r=function(){function e(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(n,t,o){return t&&e(n.prototype,t),o&&e(n,o),n}}(),i=a(t("./node_modules/classnames/dedupe.js")),l=a(t("./src/default-attrs.json"));function a(e){return e&&e.__esModule?e:{default:e}}var s=function(){function e(n,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=n,this.contents=t,this.tags=r,this.attrs=o({},l.default,{class:"feather feather-"+n})}return r(e,[{key:"toSvg",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return"<svg "+function(e){return Object.keys(e).map((function(n){return n+'="'+e[n]+'"'})).join(" ")}(o({},this.attrs,e,{class:(0,i.default)(this.attrs.class,e.class)}))+">"+this.contents+"</svg>"}},{key:"toString",value:function(){return this.contents}}]),e}();n.default=s},"./src/icons.js":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=l(t("./src/icon.js")),r=l(t("./dist/icons.json")),i=l(t("./src/tags.json"));function l(e){return e&&e.__esModule?e:{default:e}}n.default=Object.keys(r.default).map((function(e){return new o.default(e,r.default[e],i.default[e])})).reduce((function(e,n){return e[n.name]=n,e}),{})},"./src/index.js":function(e,n,t){"use strict";var o=l(t("./src/icons.js")),r=l(t("./src/to-svg.js")),i=l(t("./src/replace.js"));function l(e){return e&&e.__esModule?e:{default:e}}e.exports={icons:o.default,toSvg:r.default,replace:i.default}},"./src/replace.js":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},r=l(t("./node_modules/classnames/dedupe.js")),i=l(t("./src/icons.js"));function l(e){return e&&e.__esModule?e:{default:e}}n.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if("undefined"==typeof document)throw new Error("`feather.replace()` only works in a browser environment.");var n=document.querySelectorAll("[data-feather]");Array.from(n).forEach((function(n){return function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=function(e){return Array.from(e.attributes).reduce((function(e,n){return e[n.name]=n.value,e}),{})}(e),l=t["data-feather"];delete t["data-feather"];var a=i.default[l].toSvg(o({},n,t,{class:(0,r.default)(n.class,t.class)})),s=(new DOMParser).parseFromString(a,"image/svg+xml").querySelector("svg");e.parentNode.replaceChild(s,e)}(n,e)}))}},"./src/tags.json":function(e){e.exports={activity:["pulse","health","action","motion"],airplay:["stream","cast","mirroring"],"alert-circle":["warning","alert","danger"],"alert-octagon":["warning","alert","danger"],"alert-triangle":["warning","alert","danger"],"align-center":["text alignment","center"],"align-justify":["text alignment","justified"],"align-left":["text alignment","left"],"align-right":["text alignment","right"],anchor:[],archive:["index","box"],"at-sign":["mention","at","email","message"],award:["achievement","badge"],aperture:["camera","photo"],"bar-chart":["statistics","diagram","graph"],"bar-chart-2":["statistics","diagram","graph"],battery:["power","electricity"],"battery-charging":["power","electricity"],bell:["alarm","notification","sound"],"bell-off":["alarm","notification","silent"],bluetooth:["wireless"],"book-open":["read","library"],book:["read","dictionary","booklet","magazine","library"],bookmark:["read","clip","marker","tag"],box:["cube"],briefcase:["work","bag","baggage","folder"],calendar:["date"],camera:["photo"],cast:["chromecast","airplay"],"chevron-down":["expand"],"chevron-up":["collapse"],circle:["off","zero","record"],clipboard:["copy"],clock:["time","watch","alarm"],"cloud-drizzle":["weather","shower"],"cloud-lightning":["weather","bolt"],"cloud-rain":["weather"],"cloud-snow":["weather","blizzard"],cloud:["weather"],codepen:["logo"],codesandbox:["logo"],code:["source","programming"],coffee:["drink","cup","mug","tea","cafe","hot","beverage"],columns:["layout"],command:["keyboard","cmd","terminal","prompt"],compass:["navigation","safari","travel","direction"],copy:["clone","duplicate"],"corner-down-left":["arrow","return"],"corner-down-right":["arrow"],"corner-left-down":["arrow"],"corner-left-up":["arrow"],"corner-right-down":["arrow"],"corner-right-up":["arrow"],"corner-up-left":["arrow"],"corner-up-right":["arrow"],cpu:["processor","technology"],"credit-card":["purchase","payment","cc"],crop:["photo","image"],crosshair:["aim","target"],database:["storage","memory"],delete:["remove"],disc:["album","cd","dvd","music"],"dollar-sign":["currency","money","payment"],droplet:["water"],edit:["pencil","change"],"edit-2":["pencil","change"],"edit-3":["pencil","change"],eye:["view","watch"],"eye-off":["view","watch","hide","hidden"],"external-link":["outbound"],facebook:["logo","social"],"fast-forward":["music"],figma:["logo","design","tool"],"file-minus":["delete","remove","erase"],"file-plus":["add","create","new"],"file-text":["data","txt","pdf"],film:["movie","video"],filter:["funnel","hopper"],flag:["report"],"folder-minus":["directory"],"folder-plus":["directory"],folder:["directory"],framer:["logo","design","tool"],frown:["emoji","face","bad","sad","emotion"],gift:["present","box","birthday","party"],"git-branch":["code","version control"],"git-commit":["code","version control"],"git-merge":["code","version control"],"git-pull-request":["code","version control"],github:["logo","version control"],gitlab:["logo","version control"],globe:["world","browser","language","translate"],"hard-drive":["computer","server","memory","data"],hash:["hashtag","number","pound"],headphones:["music","audio","sound"],heart:["like","love","emotion"],"help-circle":["question mark"],hexagon:["shape","node.js","logo"],home:["house","living"],image:["picture"],inbox:["email"],instagram:["logo","camera"],key:["password","login","authentication","secure"],layers:["stack"],layout:["window","webpage"],"life-buoy":["help","life ring","support"],link:["chain","url"],"link-2":["chain","url"],linkedin:["logo","social media"],list:["options"],lock:["security","password","secure"],"log-in":["sign in","arrow","enter"],"log-out":["sign out","arrow","exit"],mail:["email","message"],"map-pin":["location","navigation","travel","marker"],map:["location","navigation","travel"],maximize:["fullscreen"],"maximize-2":["fullscreen","arrows","expand"],meh:["emoji","face","neutral","emotion"],menu:["bars","navigation","hamburger"],"message-circle":["comment","chat"],"message-square":["comment","chat"],"mic-off":["record","sound","mute"],mic:["record","sound","listen"],minimize:["exit fullscreen","close"],"minimize-2":["exit fullscreen","arrows","close"],minus:["subtract"],monitor:["tv","screen","display"],moon:["dark","night"],"more-horizontal":["ellipsis"],"more-vertical":["ellipsis"],"mouse-pointer":["arrow","cursor"],move:["arrows"],music:["note"],navigation:["location","travel"],"navigation-2":["location","travel"],octagon:["stop"],package:["box","container"],paperclip:["attachment"],pause:["music","stop"],"pause-circle":["music","audio","stop"],"pen-tool":["vector","drawing"],percent:["discount"],"phone-call":["ring"],"phone-forwarded":["call"],"phone-incoming":["call"],"phone-missed":["call"],"phone-off":["call","mute"],"phone-outgoing":["call"],phone:["call"],play:["music","start"],"pie-chart":["statistics","diagram"],"play-circle":["music","start"],plus:["add","new"],"plus-circle":["add","new"],"plus-square":["add","new"],pocket:["logo","save"],power:["on","off"],printer:["fax","office","device"],radio:["signal"],"refresh-cw":["synchronise","arrows"],"refresh-ccw":["arrows"],repeat:["loop","arrows"],rewind:["music"],"rotate-ccw":["arrow"],"rotate-cw":["arrow"],rss:["feed","subscribe"],save:["floppy disk"],scissors:["cut"],search:["find","magnifier","magnifying glass"],send:["message","mail","email","paper airplane","paper aeroplane"],settings:["cog","edit","gear","preferences"],"share-2":["network","connections"],shield:["security","secure"],"shield-off":["security","insecure"],"shopping-bag":["ecommerce","cart","purchase","store"],"shopping-cart":["ecommerce","cart","purchase","store"],shuffle:["music"],"skip-back":["music"],"skip-forward":["music"],slack:["logo"],slash:["ban","no"],sliders:["settings","controls"],smartphone:["cellphone","device"],smile:["emoji","face","happy","good","emotion"],speaker:["audio","music"],star:["bookmark","favorite","like"],"stop-circle":["media","music"],sun:["brightness","weather","light"],sunrise:["weather","time","morning","day"],sunset:["weather","time","evening","night"],tablet:["device"],tag:["label"],target:["logo","bullseye"],terminal:["code","command line","prompt"],thermometer:["temperature","celsius","fahrenheit","weather"],"thumbs-down":["dislike","bad","emotion"],"thumbs-up":["like","good","emotion"],"toggle-left":["on","off","switch"],"toggle-right":["on","off","switch"],tool:["settings","spanner"],trash:["garbage","delete","remove","bin"],"trash-2":["garbage","delete","remove","bin"],triangle:["delta"],truck:["delivery","van","shipping","transport","lorry"],tv:["television","stream"],twitch:["logo"],twitter:["logo","social"],type:["text"],umbrella:["rain","weather"],unlock:["security"],"user-check":["followed","subscribed"],"user-minus":["delete","remove","unfollow","unsubscribe"],"user-plus":["new","add","create","follow","subscribe"],"user-x":["delete","remove","unfollow","unsubscribe","unavailable"],user:["person","account"],users:["group"],"video-off":["camera","movie","film"],video:["camera","movie","film"],voicemail:["phone"],volume:["music","sound","mute"],"volume-1":["music","sound"],"volume-2":["music","sound"],"volume-x":["music","sound","mute"],watch:["clock","time"],"wifi-off":["disabled"],wifi:["connection","signal","wireless"],wind:["weather","air"],"x-circle":["cancel","close","delete","remove","times","clear"],"x-octagon":["delete","stop","alert","warning","times","clear"],"x-square":["cancel","close","delete","remove","times","clear"],x:["cancel","close","delete","remove","times","clear"],youtube:["logo","video","play"],"zap-off":["flash","camera","lightning"],zap:["flash","camera","lightning"],"zoom-in":["magnifying glass"],"zoom-out":["magnifying glass"]}},"./src/to-svg.js":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o,r=(o=t("./src/icons.js"))&&o.__esModule?o:{default:o};n.default=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(console.warn("feather.toSvg() is deprecated. Please use feather.icons[name].toSvg() instead."),!e)throw new Error("The required `key` (icon name) parameter is missing.");if(!r.default[e])throw new Error("No icon matching '"+e+"'. See the complete list of icons at https://feathericons.com");return r.default[e].toSvg(n)}},0:function(e,n,t){t("./node_modules/core-js/es/array/from.js"),e.exports=t("./src/index.js")}})},e.exports=n()},379:e=>{"use strict";var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},l=[],a=0;a<e.length;a++){var s=e[a],c=o.base?s[0]+o.base:s[0],d=i[c]||0,p="".concat(c," ").concat(d);i[c]=d+1;var u=t(p),y={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(y);else{var h=r(y,o);o.byIndex=a,n.splice(a,0,{identifier:p,updater:h,references:1})}l.push(p)}return l}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var l=0;l<i.length;l++){var a=t(i[l]);n[a].references--}for(var s=o(e,r),c=0;c<i.length;c++){var d=t(i[c]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}i=s}}},569:e=>{"use strict";var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o].call(i.exports,i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{"use strict";function e({tag:e,text:n="",classList:t=[],id:o="",children:r=[],props:i={}}){const l=document.createElement(e);if(l.innerText=n,t.length&&l.classList.add(...t),r.length)for(const e of r)l.appendChild(e);o&&(l.id=o);for(const[e,n]of Object.entries(i))l.setAttribute(e,n);return l}function n(n,t={}){return t.props||(t.props={}),t.props["data-feather"]=n,e({...t,tag:"i"})}function o(e){const n=Object.prototype.toString.call(e);return e instanceof Date||"object"==typeof e&&"[object Date]"===n?new e.constructor(+e):"number"==typeof e||"[object Number]"===n||"string"==typeof e||"[object String]"===n?new Date(e):new Date(NaN)}function r(e,n){return(e<0?"-":"")+Math.abs(e).toString().padStart(n,"0")}function i(e,n){const t=o(e);if(isNaN(t.getTime()))throw new RangeError("Invalid time value");const i=n?.format??"extended",l=n?.representation??"complete";let a="",s="";const c="extended"===i?"-":"",d="extended"===i?":":"";if("time"!==l){const e=r(t.getDate(),2),n=r(t.getMonth()+1,2);a=`${r(t.getFullYear(),4)}${c}${n}${c}${e}`}if("date"!==l){const e=t.getTimezoneOffset();if(0!==e){const n=Math.abs(e);s=`${e<0?"+":"-"}${r(Math.trunc(n/60),2)}:${r(n%60,2)}`}else s="Z";a=`${a}${""===a?"":"T"}${[r(t.getHours(),2),r(t.getMinutes(),2),r(t.getSeconds(),2)].join(d)}${s}`}return a}function l(){const e=new Date,n=e.getFullYear(),t=e.getMonth(),o=e.getDate(),r=new Date(0);return r.setFullYear(n,t,o+1),r.setHours(0,0,0,0),r}const a=function(e){let n;try{n=window.localStorage;const e="__storage_test__";return n.setItem(e,e),n.removeItem(e),!0}catch(e){return e instanceof DOMException&&(22===e.code||1014===e.code||"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name)&&n&&0!==n.length}}(),s=["sunday","monday","tuesday","wednesday","thursday","friday","saturday"],c=[1,2,3,4],d="today";const p={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let u;const y=new Uint8Array(16);function h(){if(!u&&(u="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!u))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return u(y)}const A=[];for(let e=0;e<256;++e)A.push((e+256).toString(16).slice(1));const m=function(e,n,t){if(p.randomUUID&&!n&&!e)return p.randomUUID();const o=(e=e||{}).random||(e.rng||h)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,n){t=t||0;for(let e=0;e<16;++e)n[t+e]=o[e];return n}return function(e,n=0){return A[e[n+0]]+A[e[n+1]]+A[e[n+2]]+A[e[n+3]]+"-"+A[e[n+4]]+A[e[n+5]]+"-"+A[e[n+6]]+A[e[n+7]]+"-"+A[e[n+8]]+A[e[n+9]]+"-"+A[e[n+10]]+A[e[n+11]]+A[e[n+12]]+A[e[n+13]]+A[e[n+14]]+A[e[n+15]]}(o)};function f(e){const n=e||[];return{list:n,add:e=>n.push(e),remove:e=>{for(const t in n)if(n[t].id===e)return n.splice(t,1)[0];return null},get:e=>n.find((n=>n.id===e))}}function g(e,n="default"){return{id:m(),title:e,color:n}}function x({id:e,title:n,description:t,date:o,repeat:r,priority:i,projectId:l}){if(!(n&&i&&l&&(o||Array.isArray(r)&&r.length)))throw new Error("Invalid arguments");return e||(e=m()),{id:e,title:n,description:t,date:o,repeat:r,priority:i,projectId:l}}function v(e,n){a&&localStorage.setItem(e,JSON.stringify(n))}let j=I("tasks"),b=I("projects"),C=I("checklist");b||function(){const e=g("Fitness"),n=x({title:"Do Yoga",description:"Do Light Yoga for 30 minutes",repeat:[s[0],s[2],s[4],s[6]],priority:4,projectId:e.id}),t=x({title:"Do Pullups",description:"Do 12 pullups",repeat:[s[0],s[2],s[4],s[6]],priority:4,projectId:e.id}),o=x({title:"Do Pushups",description:"Do 3 sets of 25 pushups",repeat:s.slice(0,6),priority:4,projectId:e.id}),r=g("Grind"),a=x({title:"Tackle Programming Questions",description:"Solve a programming question",repeat:s.slice(0,6),priority:3,projectId:r.id}),c=x({title:"Crack Data Structure and Algorithm",description:"Solve a data structure and algorithm question.",repeat:s.slice(0,6),priority:3,projectId:r.id}),d=g("Explore"),p=i(new Date,{representation:"date"}),u=x({title:"Explore Today Section",description:"This is a task dated today",date:p,priority:4,projectId:d.id}),y=x({title:"Explore Upcoming Section",description:"Explore Upcoming Section for upcoming tasks",date:p,priority:4,projectId:d.id}),h=x({title:"Explore Upcoming Section",description:"This is task set for tomorrow.",date:i(l(),{representation:"date"}),priority:4,projectId:d.id}),A=x({title:"Explore Upcoming Section",description:"Explore Checklist Section for completed tasks",date:p,priority:4,projectId:d.id}),m=x({title:"Explore Project Section",description:"Explore Project Section for creating or deleting projects",date:p,priority:4,projectId:d.id});b=[e,r,d],j=[n,t,o,a,c,u,h,y,m,A];const f=x({title:"Explore Checklist Section",description:"This is a completed Task",date:p,priority:4,projectId:d.id});C=[f],v("projects",b),v("tasks",j),v("checklist",C)}();const w=function(e){const{list:n,add:t,remove:r,get:l}=f(e),a=e=>n.filter((n=>{return t=n.date,r=i(e,{representation:"date"}),+o(t)==+o(r);var t,r})),c=e=>n.filter((n=>!!n.repeat&&n.repeat.includes(s[function(e){return o(e).getDay()}(e)])));return{list:n,add:t,remove:r,get:l,edit:e=>{console.log(e);const t=n.findIndex((n=>n.id===e.id));return n[t]=e,e},getTasksByTaskDate:a,getTaskByTaskDay:c,getTasksByDate:e=>[...a(e),...c(e)],getTasksByTitle:e=>n.filter((n=>n.title.includes(e))),getTasksByProjectId:e=>n.filter((n=>n.projectId===e))}}(j),B=f(b),k=function(e){const n=(e||[]).filter((e=>!function(e,n){return+o(e)<+o(n)}(e.date,i(new Date,{representation:"date"})))),{add:t,remove:r,get:l}=f(n);return{list:n,add:t,remove:r,get:l}}(C);function I(e){return a?JSON.parse(localStorage.getItem(e)):null}function _(e){const n=o(e);return n.setHours(0,0,0,0),n}function M(e,n){return+_(e)==+_(n)}function E(e){!function(e){window.location.hash=e}(e),z(e)}function z(e){e.startsWith("project-")?function(e){try{!function(e){const n=B.get(e);if(!n)throw new Error("Invalid Project");Me.textContent=n.title;const t=ke(Ce(e)).map((e=>P(e)));_e.replaceChildren(...t),pe({projectId:e})}(e.substring(8)),L("project-task")}catch(e){E(d),console.log(e)}}(e):L(e)}function L(e){!function(e){const n=document.querySelector(`#${e}`)?.parentElement?.children;for(let e of n)e.style.display="none"}(e),(document.querySelector(`#${e}`)||document.querySelector(`#${d}`)).style.display="block"}function Q(e){E("project-"+e)}function S(){return window.location.hash.substring(1)}function H(n,t="",o=[],r={},i=!1,l=!1){const a=e({tag:"div",text:n,classList:["todo-item-title","left","text-container"]}),s=e({tag:"div",text:t,classList:["todo-item-description","todo-item-left","text-container"]}),c=e({tag:"div",text:r?.text||"",classList:["todo-item-hashtag","todo-item-right","text-container"]});r&&r.refFn&&c.addEventListener("click",r.refFn);const d=o.map((n=>e({tag:"li",children:[n]}))),p=[a,s,e({tag:"div",classList:["todo-item-icon-set","todo-item-right"],children:[e({tag:"ul",children:d})]}),c];return i&&p.push(function(n){const t=e({tag:"input",classList:["todo-item-checkbox"],props:{type:"checkbox"}});return n&&(t.checked=!0),e({tag:"div",classList:["round","todo-item-checkbox"],children:[t]})}(l)),e({tag:"li",classList:["todo-item"],children:p})}function O(e){return e.closest("li.todo-item")}function D(e,n){n.replaceChildren(...e.children)}window.addEventListener("hashchange",(()=>{z(S())}));const V=e({tag:"dialog",classList:["modal-form-container"]});function Y(n,t){const o=e({tag:"button",props:{type:"submit"},text:"Save",classList:["modal-form-submit"]}),r=e({tag:"button",text:"Cancel",classList:["modal-form-cancel"],props:{type:"button"}});r.addEventListener("click",(()=>V.close())),n.classList.add("modal-form-content");const i=e({tag:"form",classList:["modal-form"],children:[n,o,r]});return i.addEventListener("submit",(e=>{e.preventDefault();const n=e.target.closest("form");t(n),n.reset(),V.close()})),V.replaceChildren(i),V}const T=V;function q(e){e.classList.add("remove"),e.addEventListener("animationend",(()=>e.remove()))}function P(e,t=!1){if(!e||!e.id)throw new Error("Invalid Task");const o=t?Be(e.id):we(e.id);if(!o)throw new Error("Invalid Task");const r=H(e.title,e.description,function(e=!1){const t=[];if(e)for(const e of xe)t.push(n(e.icon,{classList:[e.class]}));else for(const e of ge)t.push(n(e.icon,{classList:[e.class]}));return t}(t),{text:o.title,refFn:Ae(o)},!0,t);return r.id=e.id,r}const U=e({tag:"ul",classList:["todo-item-container"]});function F(){const t=k.list.map((e=>P(e,!0)));U.replaceChildren(...t);const o=e({tag:"div",classList:["page-container"],children:[e({tag:"div",classList:["heading"],children:[n("check-circle"),e({tag:"h1",text:"Checklist"})]}),U]});return o.addEventListener("click",(({target:e})=>ve(e))),e({tag:"div",id:"checklist",children:[o]})}function J(){const e=new Date,n=e.getFullYear(),t=e.getMonth(),o=e.getDate(),r=new Date(0);return r.setFullYear(n,t,o+1),r.setHours(23,59,59,999),r}const W=e({tag:"div",classList:["page-container"]}),N=e({tag:"div",classList:["page-container"]}),R=e({tag:"div",classList:["page-container"],children:[W,N]});function Z(t){!function(){const t=ke(w.getTasksByDate(J()),J()).map((e=>P(e)));W.replaceChildren(e({tag:"div",classList:["heading"],children:[n("calendar"),e({tag:"h1",text:"Tomorrow"})]}),e({tag:"ul",classList:["todo-item-container"],props:{"data-date":i(J(),{representation:"date"})},children:t}))}(),X(t||"")}function X(t){const r=t?function(e,n,t){let r;var i;return void 0===(i=n)||"locale"in i?t=n:r=n,new Intl.DateTimeFormat(t?.locale,r).format(o(e))}(t,{weekday:"long",year:"numeric",month:"long",day:"numeric"},{locale:"en-IN"}):"Select Date",l=e({tag:"div",classList:["upcoming-heading-cont"],children:[(a=r,e({tag:"div",classList:["heading"],children:[n("calendar"),e({tag:"h1",text:a})]})),e({tag:"input",classList:["upcoming-date-picker"],props:{type:"date",value:t?i(t,{representation:"date"}):""}})]});var a;if(l.addEventListener("input",(({target:e})=>{X(e.value)})),!t)return void N.replaceChildren(l);const s=ke(w.getTasksByDate(t),t).map((e=>P(e)));N.replaceChildren(l,e({tag:"ul",classList:["todo-item-container"],props:{"data-date":t},children:s}))}function $(){be(),Z()}function G(n,t,o=!0,r=16,i={},l="text"){const a="text-input-"+function(e){return e.trim().replaceAll(" ","-").toLowerCase()}(n),s=e({tag:"input",props:{type:l,name:t,maxlength:r},id:a});o&&(s.required=!0);const c=e({tag:"label",text:n,props:{for:a}});return i.children=[c,s],i.classList||(i.classList=[]),i.classList.push("text-input"),e({tag:"div",...i})}function K(t,o,r){return e({tag:"div",classList:["todo-item","item-adder"],children:[n("plus"),e({tag:"span",text:"Add new "+t})]})}const ee=G("Task Name","title"),ne=G("Description","description",!1,64),te=i(new Date,{representation:"date"}),oe=e({tag:"input",props:{name:"date",type:"date",id:"task-date",value:te,min:te}}),re=e({tag:"div",children:[e({tag:"label",text:"Date:",props:{for:"task-date"}}),oe]}),ie=s.map((n=>e({tag:"input",props:{type:"checkbox",name:"repeat",value:n,day:n.substring(0,1).toUpperCase()}}))),le=e({tag:"div",children:[e({tag:"label",text:"Repeat:"}),...ie],classList:["days-cont"]}),ae=e({tag:"select",props:{name:"priority",required:!0},children:c.map((n=>e({tag:"option",text:"Priority "+n,props:{value:n}})))});ae.selectedIndex=c.length-1;const se=e({tag:"select",props:{name:"projectId",required:!0}}),ce=e({tag:"div",children:[ee,ne,le,e({tag:"div",children:[re,ae,se],classList:["date-priority-project-cont"]})]});function de(){return ce}function pe(e={}){ee.querySelector("input").value=e.title||"",ne.querySelector("input").value=e.description||"",e.repeat&&e.repeat.length?(ie.forEach((n=>{e.repeat.includes(n.value)&&(n.checked=!0)})),oe.value=""):e.date?(oe.value=e.date,oe.classList.add("selected")):oe.value=te,ae.selectedIndex=e.priority?c.indexOf(+e.priority):c.length-1,se.value=e.projectId||""}function ue(){const n=B.list.map((n=>e({tag:"option",text:n.title,props:{value:n.id}})));se.replaceChildren(e({tag:"option",text:"Project",props:{disabled:!0,selected:!0,value:""}}),...n)}function ye(e){const n=new FormData(e),t={repeat:[]};for(const[e,o]of n.entries())"repeat"===e?t.repeat.push(o):t[e]=o;if(!t.repeat.length&&!t.date){const n="Please Enter either Date or select repeating days";throw function(e,n){e.setCustomValidity(n),e.reportValidity(),e.closest("form").addEventListener("change",(()=>e.setCustomValidity("")))}(e.querySelector("input[type=date]"),n),new Error(n)}return t}function he(e){return n=>{const t=x(ye(n));w.add(t),v("tasks",w.list),e&&e(t)}}function Ae(e){const n=e.id;return()=>Q(n)}var me,fe;fe=le,(me=oe).value&&me.classList.add("selected"),me.addEventListener("input",(()=>{fe.querySelectorAll('input[type="checkbox"]').forEach((e=>e.checked=!1)),me.classList.add("selected"),me.value||me.classList.remove("selected")})),fe.addEventListener("change",(()=>{me.value="",me.classList.remove("selected")})),ue();const ge=[{icon:"edit",class:"edit-task",function:function(e){pe(w.get(e.id)),Y(de(),(n=>{const t=ye(n);t.id=e.id;const o=w.edit(x(t));v("tasks",w.list),D(P(o),e),$()})).showModal()}},{icon:"trash-2",class:"delete-task",function:function(e){if(!w.remove(e.id))throw new Error("Invalid Id");v("tasks",w.list),q(e)}}],xe=[{icon:"trash-2",class:"delete-checklist-task",function:function(e){if(!k.remove(e.id))throw new Error("Invalid Id");$(),v("checklist",k.list),q(e)}}];function ve(e){const n=O(e);if(!n)return;for(const t of ge)if(e.closest(`.${t.class}`))return t.function(n);for(const t of xe)if(e.closest(`.${t.class}`))return t.function(n);const t=e.closest('input[type="checkbox"]');t&&function(e,n){const t=n.parentElement.dataset?.date||new Date;if(e.checked){const e=function(e,n=new Date){const t=w.get(e);if(!t)throw new Error("Invalid Task Id");if(t.date)return w.remove(e),v("tasks",w.list),k.add(t),v("checklist",k.list),t;const o=k.get(e);if(o)return o.date=n,v("checklist",k.list),"upcoming"===S()&&be(),t;const r=structuredClone(t);return r.date=i(n,{representation:"date"}),k.add(r),v("checklist",k.list),"upcoming"===S()&&be(),r}(n.id,t);return q(n),o=P(e,!0),void U.appendChild(o)}var o;!function(e){const n=k.remove(e);if(!n)throw new Error("Invalid Task Id");if(v("checklist",k.list),!n.repeat||!n.repeat.length)return w.add(n),v("tasks",w.list),n;w.get(e)}(n.id),q(n),$()}(t,n)}const je=e({tag:"div",classList:["page-container"]});function be(){const t=w.getTasksByDate(new Date),o={};for(const e in c)o["p"+c[e]]=[];ke(t).forEach((e=>o["p"+e.priority].push(P(e))));const r=[];for(const[n,t]of Object.entries(o))r.push(e({tag:"ul",classList:["todo-item-container",n],children:t}));je.replaceChildren(e({tag:"div",classList:["heading"],children:[n("hash"),e({tag:"h1",text:"Today"})]}),...r)}function Ce(e){return w.getTasksByProjectId(e)}function we(e){const n=w.get(e);if(!n)throw new Error("Invalid Task ID");return B.get(n.projectId)}function Be(e){const n=k.get(e);if(!n)throw new Error("Invalid Task ID");return B.get(n.projectId)}function ke(e,n=new Date){if(!Array.isArray(e))throw new Error("Invalid Argument");return e.filter((e=>{if("object"!=typeof e)throw new Error("Invalid Argument");return e.date||!k.get(e.id)||!(M(k.get(e.id).date,n)||function(e,n){const t=o(e),r=o(n);return t.getTime()>r.getTime()}(k.get(e.id).date,n))}))}function Ie(){return S().startsWith("project-")?S().substring(8):null}const _e=e({tag:"ul",classList:["todo-item-container"]}),Me=e({tag:"h1"}),Ee=function(e){const n=K("Task");return n.addEventListener("click",(()=>{pe({}),Y(de(),he(e)).showModal()})),n}((e=>{$(),we(e.id)===B.get(Ie())&&Qe(e)}));function ze(){const t=e({tag:"div",classList:["todo-item","item-adder"],children:[n("trash-2"),e({tag:"span",text:"Delete Project"})]});return t.addEventListener("click",(()=>function(e){const n=function(e){Ce(e).forEach((e=>w.remove(e.id))),v("tasks",w.list);const n=B.remove(e);return v("projects",B.list),n}(e);if(!n)throw new Error("Invalid Id");const t=document.getElementById(e);t&&t.remove(),E("projects")}(Ie()))),t}function Le(){const t=e({tag:"div",classList:["page-container"],children:[e({tag:"div",classList:["heading"],children:[n("folder"),Me]}),Ee,_e,ze()]});return t.addEventListener("click",(({target:e})=>ve(e))),e({tag:"div",id:"project-task",children:[t]})}function Qe(e){const n=P(e);n.classList.add("add"),_e.appendChild(n)}const Se={plus:function(){pe({}),Y(de(),he((function(e){"today"===S()&&function(e){if(!e||"object"!=typeof e)throw new Error("Invalid Task");const n=s[(new Date).getDay()];return function(e){return M(e,Date.now())}(e.date)||e.repeat&&e.repeat.includes(n)}(e)?function(e){const n=je.querySelector(".p"+e.priority);if(!n)throw new Error("Invalid Task");const t=P(e);t.classList.add("add"),n.appendChild(t)}(e):(Ie()===e.projectId&&Qe(e),$())}))).showModal()},search:function(){console.log("clicked Search")},sun:function(){document.querySelector(":root").classList.toggle("dark")},sidebar:function(e){e.target.closest("svg").classList.toggle("flip");const n=document.getElementById("sidebar-dialog");n&&(n.open?n.close():n.show()),e.stopPropagation(),e.preventDefault()}};function He(){const n=e({tag:"h1",text:"#ToDo",classList:["logo"]});return e({tag:"header",classList:["header"],children:[e({tag:"ul",children:[Oe("sidebar")]}),n,e({tag:"nav",classList:["main-nav","nav"],children:[e({tag:"ul",children:[Oe("search"),Oe("plus"),Oe("sun")]})]})]})}function Oe(t){const o=e({tag:"li",children:[n(t)]});return o.addEventListener("click",Se[t]),o}var De=t(379),Ve=t.n(De),Ye=t(795),Te=t.n(Ye),qe=t(569),Pe=t.n(qe),Ue=t(565),Fe=t.n(Ue),Je=t(216),We=t.n(Je),Ne=t(589),Re=t.n(Ne),Ze=t(772),Xe={};Xe.styleTagTransform=Re(),Xe.setAttributes=Fe(),Xe.insert=Pe().bind(null,"head"),Xe.domAPI=Te(),Xe.insertStyleElement=We(),Ve()(Ze.Z,Xe),Ze.Z&&Ze.Z.locals&&Ze.Z.locals;const $e={today:"hash",upcoming:"calendar",checklist:"check-circle",projects:"folder"};function Ge(t){const o=e({tag:"span",text:(r=t,r.substring(0,1).toUpperCase()+r.substring(1))});var r;return e({tag:"li",props:{"data-nav":t},children:[n($e[t]),o]})}function Ke(){const n=e({tag:"nav",children:[e({tag:"ul",children:[Ge("today"),Ge("upcoming"),Ge("checklist"),Ge("projects")]})]}),t=e({tag:"dialog",id:"sidebar-dialog",children:[n]});return document.addEventListener("click",(({target:e})=>{if(t.open){if(e.closest("dialog#sidebar-dialog"))return e.closest("li")?(E(e.closest("li").dataset.nav),void t.close()):void 0;t.close()}})),t}function en(n=""){return e({tag:"div",children:[G("Project Name","title",n)]})}const nn=[{icon:"plus",class:"add-task",function:function(e){pe({projectId:e.id}),Y(de(),he()).showModal()}},{icon:"edit",class:"edit-project",function:function(e){const n=B.get(e.id);if(!n)throw new Error("Invalid Project");Y(en(n.title),(t=>{const o=new FormData(t).get("title");n.title=o,v("projects",B.list),ue(),D(tn(n),e)})).showModal()}},{icon:"eye",class:"view-project",function:function(e){Q(e.id)}}];function tn(e){const t=H(e.title,"",function(){const e=[];for(const t of nn)e.push(n(t.icon,{classList:[t.class]}));return e}());return t.id=e.id,t}function on(e){const n=n=>{const t=g(new FormData(n).get("title"));B.add(t),v("projects",B.list),ue(),function(e,n){e.classList.add("add"),e.addEventListener("animationend",(()=>e.classList.remove("add"))),n.appendChild(e)}(tn(t),e)},t=K("project");return t.addEventListener("click",(()=>{Y(en(),n).showModal()})),t}function rn(){const t=B.list.map((e=>tn(e))),o=e({tag:"ul",classList:["todo-item-container"],children:[...t]}),r=e({tag:"div",classList:["page-container"],children:[e({tag:"div",classList:["heading"],children:[n("folder"),e({tag:"h1",text:"My Projects"})]}),on(o),o]});return r.addEventListener("click",(({target:e})=>function(e){const n=O(e);if(n)for(const t of nn)if(e.closest(`.${t.class}`))return t.function(n)}(e))),e({tag:"div",id:"projects",children:[r]})}const ln=t(508),an=(()=>{const n=e({tag:"main",children:[(be(),je.addEventListener("click",(({target:e})=>ve(e))),e({tag:"div",id:"today",children:[je]})),(Z(),R.addEventListener("click",(({target:e})=>ve(e))),e({tag:"div",id:"upcoming",children:[R]})),F(),rn(),Le()]});return e({tag:"div",id:"content",children:[He(),Ke(),n,T]})})();document.body.appendChild(an),window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches&&document.querySelector(":root").classList.add("dark"),E(S()||d),ln.replace(),new MutationObserver((()=>{ln.replace()})).observe(an,{subtree:!0,childList:!0})})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,